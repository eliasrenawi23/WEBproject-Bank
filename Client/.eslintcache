[{"C:\\Users\\123\\Desktop\\semster 8\\WEB\\final\\updated_project- elias-reham\\201277811_318292604\\Client\\src\\index.js":"1","C:\\Users\\123\\Desktop\\semster 8\\WEB\\final\\updated_project- elias-reham\\201277811_318292604\\Client\\src\\App.js":"2","C:\\Users\\123\\Desktop\\semster 8\\WEB\\final\\updated_project- elias-reham\\201277811_318292604\\Client\\src\\data\\store.js":"3","C:\\Users\\123\\Desktop\\semster 8\\WEB\\final\\updated_project- elias-reham\\201277811_318292604\\Client\\src\\components\\UploadFile.jsx":"4","C:\\Users\\123\\Desktop\\semster 8\\WEB\\final\\updated_project- elias-reham\\201277811_318292604\\Client\\src\\components\\FilesList.jsx":"5","C:\\Users\\123\\Desktop\\semster 8\\WEB\\final\\updated_project- elias-reham\\201277811_318292604\\Client\\src\\components\\UploadDisplayer.jsx":"6","C:\\Users\\123\\Desktop\\semster 8\\WEB\\final\\updated_project- elias-reham\\201277811_318292604\\Client\\src\\data\\Global.js":"7","C:\\Users\\123\\Desktop\\semster 8\\WEB\\final\\updated_project- elias-reham\\201277811_318292604\\Client\\src\\components\\Navbar.jsx":"8","C:\\Users\\123\\Desktop\\semster 8\\WEB\\final\\updated_project- elias-reham\\201277811_318292604\\Client\\src\\components\\HomeworkForm.jsx":"9","C:\\Users\\123\\Desktop\\semster 8\\WEB\\final\\updated_project- elias-reham\\201277811_318292604\\Client\\src\\components\\CourseForm.jsx":"10","C:\\Users\\123\\Desktop\\semster 8\\WEB\\final\\updated_project- elias-reham\\201277811_318292604\\Client\\src\\pages\\LogInPage.jsx":"11","C:\\Users\\123\\Desktop\\semster 8\\WEB\\final\\updated_project- elias-reham\\201277811_318292604\\Client\\src\\pages\\AllCoursesPage.jsx":"12","C:\\Users\\123\\Desktop\\semster 8\\WEB\\final\\updated_project- elias-reham\\201277811_318292604\\Client\\src\\pages\\CoursePage.jsx":"13","C:\\Users\\123\\Desktop\\semster 8\\WEB\\final\\updated_project- elias-reham\\201277811_318292604\\Client\\src\\pages\\HomeworksTeacherViewPage.jsx":"14","C:\\Users\\123\\Desktop\\semster 8\\WEB\\final\\updated_project- elias-reham\\201277811_318292604\\Client\\src\\pages\\HomeworkStudentViewPage.jsx":"15","C:\\Users\\123\\Desktop\\semster 8\\WEB\\final\\updated_project- elias-reham\\201277811_318292604\\Client\\src\\pages\\SubmissionTeacherView.jsx":"16","C:\\Users\\123\\Desktop\\semster 8\\WEB\\final\\updated_project- elias-reham\\201277811_318292604\\Client\\src\\pages\\AdminPage.jsx":"17","C:\\Users\\123\\Desktop\\semster 8\\WEB\\final\\updated_project- elias-reham\\201277811_318292604\\Client\\src\\API\\API.js":"18","C:\\Users\\123\\Desktop\\semster 8\\WEB\\final\\updated_project- elias-reham\\201277811_318292604\\Client\\src\\Util\\TimeUtil.js":"19","C:\\Users\\123\\Desktop\\semster 8\\WEB\\final\\updated_project- elias-reham\\201277811_318292604\\Client\\src\\components\\DateTimePicker.jsx":"20","C:\\Users\\123\\Desktop\\semster 8\\WEB\\final\\updated_project- elias-reham\\201277811_318292604\\Client\\src\\components\\TemporaryAlert.jsx":"21","C:\\Users\\123\\Desktop\\semster 8\\WEB\\final\\updated_project- elias-reham\\201277811_318292604\\Client\\src\\components\\ColorfulSelect.jsx":"22","C:\\Users\\123\\Desktop\\semster 8\\WEB\\final\\updated_project- elias-reham\\201277811_318292604\\Client\\src\\components\\CourseCell.jsx":"23","C:\\Users\\123\\Desktop\\semster 8\\WEB\\final\\updated_project- elias-reham\\201277811_318292604\\Client\\src\\components\\CourseTeacherHomeWorkCell.jsx":"24","C:\\Users\\123\\Desktop\\semster 8\\WEB\\final\\updated_project- elias-reham\\201277811_318292604\\Client\\src\\components\\CourseStudentHomeWorkCell.jsx":"25","C:\\Users\\123\\Desktop\\semster 8\\WEB\\final\\updated_project- elias-reham\\201277811_318292604\\Client\\src\\components\\EditableParagraph.jsx":"26","C:\\Users\\123\\Desktop\\semster 8\\WEB\\final\\updated_project- elias-reham\\201277811_318292604\\Client\\src\\components\\EditableDateTime.jsx":"27","C:\\Users\\123\\Desktop\\semster 8\\WEB\\final\\updated_project- elias-reham\\201277811_318292604\\Client\\src\\components\\SubmissionCell.jsx":"28","C:\\Users\\123\\Desktop\\semster 8\\WEB\\final\\updated_project- elias-reham\\201277811_318292604\\Client\\src\\components\\SpecificHomeWorkCell.jsx":"29","C:\\Users\\123\\Desktop\\semster 8\\WEB\\final\\updated_project- elias-reham\\201277811_318292604\\Client\\src\\components\\CustomerDialog.jsx":"30","C:\\Users\\123\\Desktop\\semster 8\\WEB\\final\\updated_project- elias-reham\\201277811_318292604\\Client\\src\\components\\EditableNumber.jsx":"31","C:\\Users\\123\\Desktop\\semster 8\\WEB\\final\\updated_project- elias-reham\\201277811_318292604\\Client\\src\\components\\Comment.jsx":"32"},{"size":752,"mtime":1613161447000,"results":"33","hashOfConfig":"34"},{"size":3738,"mtime":1625811559000,"results":"35","hashOfConfig":"34"},{"size":697,"mtime":1613161447000,"results":"36","hashOfConfig":"34"},{"size":4003,"mtime":1613161447000,"results":"37","hashOfConfig":"34"},{"size":3582,"mtime":1625790542000,"results":"38","hashOfConfig":"34"},{"size":1285,"mtime":1625784687000,"results":"39","hashOfConfig":"34"},{"size":6167,"mtime":1625853240667,"results":"40","hashOfConfig":"34"},{"size":1310,"mtime":1625597168000,"results":"41","hashOfConfig":"34"},{"size":3531,"mtime":1613161447000,"results":"42","hashOfConfig":"34"},{"size":4565,"mtime":1626436653848,"results":"43","hashOfConfig":"34"},{"size":3457,"mtime":1626436424027,"results":"44","hashOfConfig":"34"},{"size":2860,"mtime":1626436489500,"results":"45","hashOfConfig":"34"},{"size":7364,"mtime":1626436545698,"results":"46","hashOfConfig":"34"},{"size":6842,"mtime":1626436598406,"results":"47","hashOfConfig":"34"},{"size":1800,"mtime":1626436476169,"results":"48","hashOfConfig":"34"},{"size":5859,"mtime":1625811855000,"results":"49","hashOfConfig":"34"},{"size":12612,"mtime":1626436686642,"results":"50","hashOfConfig":"34"},{"size":8298,"mtime":1625808469000,"results":"51","hashOfConfig":"34"},{"size":1218,"mtime":1613161447000,"results":"52","hashOfConfig":"34"},{"size":1050,"mtime":1613161447000,"results":"53","hashOfConfig":"34"},{"size":803,"mtime":1613161447000,"results":"54","hashOfConfig":"34"},{"size":2110,"mtime":1613161447000,"results":"55","hashOfConfig":"34"},{"size":1314,"mtime":1613161447000,"results":"56","hashOfConfig":"34"},{"size":926,"mtime":1613161447000,"results":"57","hashOfConfig":"34"},{"size":1011,"mtime":1613161447000,"results":"58","hashOfConfig":"34"},{"size":2196,"mtime":1625783075000,"results":"59","hashOfConfig":"34"},{"size":1628,"mtime":1625791532000,"results":"60","hashOfConfig":"34"},{"size":981,"mtime":1613161447000,"results":"61","hashOfConfig":"34"},{"size":2781,"mtime":1613161447000,"results":"62","hashOfConfig":"34"},{"size":1500,"mtime":1613161447000,"results":"63","hashOfConfig":"34"},{"size":1284,"mtime":1613161447000,"results":"64","hashOfConfig":"34"},{"size":390,"mtime":1613161447000,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},"1l8s5wu",{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"69"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"69"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"69"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"69"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"69"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"69"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"69"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"69"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"69"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"69"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"69"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"69"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"69"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"69"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"69"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"69"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"69"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"69"},"C:\\Users\\123\\Desktop\\semster 8\\WEB\\final\\updated_project- elias-reham\\201277811_318292604\\Client\\src\\index.js",["157","158","159"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport {store} from \"./data/store\";\nimport { Provider } from \"react-redux\";\nimport persistStore from \"redux-persist/es/persistStore\";\nimport { PersistGate } from 'redux-persist/integration/react'\nimport UploadFile from \"./components/UploadFile\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport FilesList from \"./components/FilesList\";\nimport './styles.scss';\nimport UploadDisplayer from \"./components/UploadDisplayer\";\n\n\nlet persistor = persistStore(store)\nReactDOM.render(\n  <>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App/>\n      </PersistGate>\n    </Provider>\n  </>,\n  document.getElementById(\"root\")\n);",["160","161"],"C:\\Users\\123\\Desktop\\semster 8\\WEB\\final\\updated_project- elias-reham\\201277811_318292604\\Client\\src\\App.js",["162","163","164"],"import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Navbar from './components/Navbar';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport {useLocation,} from 'react-router-dom';\nimport Breadcrumb from 'react-bootstrap/Breadcrumb';\nimport {\n  ShowLogIn,\n  ShowCourse,\n  ShowCourses,\n  ShowHomeWork,\n  hideSubmissionDetails,\n  currentHomeworkTitle,\n  currentCourseTitle,\n  currentSubmissionStudentId,\n  isAddCourseHidden,\n  isAddHomeworkHidden\n} from './data/Global';\n\nimport {useSelector, useDispatch} from 'react-redux';\n\nimport MainPage from './pages/AllCoursesPage';\nimport LogIn from './pages/LogInPage';\nimport Course from './pages/CoursePage';\nimport HomeworksTeacherView from './pages/HomeworksTeacherViewPage';\nimport HomeworkStudentView from './pages/HomeworkStudentViewPage';\nimport SubmissionTeacherView from './pages/SubmissionTeacherView';\nimport CourseForm from './components/CourseForm';\nimport HomeworkForm from './components/HomeworkForm';\nimport AdminPage from './pages/AdminPage';\n\nfunction App() {\n  const Login = useSelector(ShowLogIn);\n  const isCoursesHidden = useSelector(ShowCourses);\n  const isCourseHidden = useSelector(ShowCourse);\n  const isAddCourseHidd = useSelector(isAddCourseHidden)\n  const isAddHomeworkHidd = useSelector(isAddHomeworkHidden)\n  const isSubmissionDetailsHidden = useSelector(hideSubmissionDetails);\n  const isHomeworkHidden = useSelector(ShowHomeWork);\n  const currHwTitle = useSelector(currentHomeworkTitle);\n  const currCourseTitle = useSelector(currentCourseTitle);\n  const currSubmissionStudentId = useSelector(currentSubmissionStudentId);\n\n  const getBreadcrumb = () => {\n    return (\n      <Breadcrumb className=\"breadcrumb-style\" >\n        <Breadcrumb.Item href=\"/Courses\" hidden={isCoursesHidden}>\n          Home\n        </Breadcrumb.Item>\n        <Breadcrumb.Item href=\"/Course\" hidden={isCourseHidden}>\n          {currCourseTitle}\n        </Breadcrumb.Item>\n        \n\n        <Breadcrumb.Item href=\"/CourseForm\" hidden={isAddCourseHidd}>\n          Add Course\n        </Breadcrumb.Item>\n        <Breadcrumb.Item href=\"/HomeworkForm\" hidden={!isAddHomeworkHidd}>\n          Add Homework\n        </Breadcrumb.Item>\n\n        <Breadcrumb.Item\n          href=\"/HomeworksTeacherView\"\n          active={false}\n          hidden={isHomeworkHidden}\n        >\n          {currHwTitle}\n        </Breadcrumb.Item>\n        \n        <Breadcrumb.Item\n        href=\"/SubmissionTeacherView\"\n        active={false}\n        hidden={isSubmissionDetailsHidden}\n      >\n        {currSubmissionStudentId}\n      </Breadcrumb.Item>\n    </Breadcrumb> \n    )\n  }\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n       \n        {getBreadcrumb()}\n        \n        <div className=\"body\">\n          <Switch>\n            <Route path=\"/\" exact  component={LogIn} />\n            <Route path=\"/Courses\" exact component={MainPage} />\n            <Route path=\"/Course\" exact component={Course} />\n            <Route path=\"/CourseForm\" exact component={CourseForm} />\n            <Route path=\"/HomeworkForm\" exact component={HomeworkForm}/>\n            <Route path=\"/AdminPage\" exact component={AdminPage}/>\n\n       \n            <Route\n              path=\"/HomeworksTeacherView\"\n              exact\n              component={HomeworksTeacherView}\n            />\n            <Route\n              path=\"/SubmissionTeacherView\"\n              exact\n              component={SubmissionTeacherView}\n            />\n            <Route\n              path=\"/HomeworkStudentView\"\n              exact\n              component={HomeworkStudentView}\n            />\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\123\\Desktop\\semster 8\\WEB\\final\\updated_project- elias-reham\\201277811_318292604\\Client\\src\\data\\store.js",["165","166"],"import {configureStore, getDefaultMiddleware} from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport {PersistGate} from 'redux-persist/integration/react';\n\nimport global from './Global';\nconst persistConfig = {\n  key: 'root',\n  version: 1,\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, global);\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n});\n","C:\\Users\\123\\Desktop\\semster 8\\WEB\\final\\updated_project- elias-reham\\201277811_318292604\\Client\\src\\components\\UploadFile.jsx",[],"C:\\Users\\123\\Desktop\\semster 8\\WEB\\final\\updated_project- elias-reham\\201277811_318292604\\Client\\src\\components\\FilesList.jsx",["167","168","169"],"import React, {useState, useEffect} from 'react';\nimport {Modal, Button} from 'react-bootstrap';\nimport {getFiles, downloadFile, deleteFile} from '../API/API';\nimport {toDateTimeString} from '../Util/TimeUtil';\n\nconst FilesList = ({\n  fkValue,\n  fk,\n  table,\n  fileUploadedAt,\n  allowDelete = false,\n}) => {\n  const [filesList, setFilesList] = useState([]);\n  const [errorMsg, setErrorMsg] = useState('');\n  const getFilesList = async () => {\n    try {\n      getFiles(fkValue, fk, table).then((res) => {\n        setErrorMsg('');\n        if (res) setFilesList(res.data);\n      });\n    } catch (error) {\n      error.response && setErrorMsg(error.response.data);\n    }\n  };\n  useEffect(() => {\n    getFilesList();\n  }, [fileUploadedAt]);\n\n  const downloadFileCapsule = (id, table, path, mimetype) => {\n    downloadFile(id, table, path, mimetype);\n  };\n\n  const [show, setShow] = useState(false);\n  const [fileToDelete, setFileToDelete] = useState(null);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const deleteFilePrompt = (id, table) => {\n    // ask of sure about deleting\n    setFileToDelete({\n      id,\n      table,\n    });\n    handleShow();\n  };\n\n  const onDeleteFileConfirmed = () => {\n    console.log('delete', fileToDelete);\n    deleteFile(fileToDelete.id, fileToDelete.table);\n    handleClose();\n    setFilesList(filesList.filter((x) => x.id !== fileToDelete.id));\n    setFileToDelete(null);\n  };\n\n  return (\n    <div className=\"files-container\">\n      {errorMsg && <p className=\"errorMsg\">{errorMsg}</p>}\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Deleting file</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>Are you sure you want to delete this file?</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"danger\" onClick={onDeleteFileConfirmed}>\n            Delete\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      <table className=\"files-table\">\n        <thead>\n          <tr>\n            <th>File Name</th>\n            <th>Uploaded At</th>\n            <th>Download File</th>\n            {allowDelete && <th>Delete File</th>}\n          </tr>\n        </thead>\n        <tbody>\n          {filesList.length > 0 ? (\n            filesList.map(({created_at, id, mimetype, path, title}) => (\n              <tr key={id}>\n                <td className=\"file-title\">{title}</td>\n                <td className=\"file-description\">\n                  {toDateTimeString(created_at)}\n                </td>\n                <td>\n                  <a\n                    className=\"file-download\"\n                    onClick={() =>\n                      downloadFileCapsule(id, table, path, mimetype)\n                    }\n                  >\n                    Download\n                  </a>\n                </td>\n                {allowDelete && (\n                  <td>\n                    <a\n                      className=\"file-download\"\n                      onClick={() => deleteFilePrompt(id, table)}\n                    >\n                      Delete\n                    </a>\n                  </td>\n                )}\n              </tr>\n            ))\n          ) : (\n            <tr>\n              <td colSpan={allowDelete ? 4 : 3} style={{fontWeight: '400'}}>\n                No files found. Please add files.\n              </td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default FilesList;\n","C:\\Users\\123\\Desktop\\semster 8\\WEB\\final\\updated_project- elias-reham\\201277811_318292604\\Client\\src\\components\\UploadDisplayer.jsx",["170","171","172"],"import React, {useState} from 'react';\nimport FilesList from './FilesList';\nimport UploadFile from './UploadFile';\n\nexport default function UploadDisplayer({fkValue, fk, table, allowUpload, allowDelete=false, style=\"\"}) {\n  const [fileUploadedAt, setFileUploadedAt] = useState(null);\n  return (\n    <div className={`upload-displayed-container ${style}`}>\n      <h3 className=\"input-edit-course-page\">Files</h3>\n      {allowUpload && (\n        <UploadFile\n          fkValue={fkValue}\n          fk={fk}\n          table={table}\n          setFileUploadedAt={setFileUploadedAt}\n        />\n      )}\n\n      <FilesList\n        fkValue={fkValue}\n        fk={fk}\n        table={table}\n        fileUploadedAt={fileUploadedAt}\n        allowDelete={allowDelete}\n      />\n    </div>\n  );\n}\n\n{/* <span className=\"input-edit-course-page\"> Files </span>\n<InputGroup className=\"mb-3\">\n\n  <FormControl\n    placeholder={extraText}\n    aria-describedby=\"basic-addon2\"\n    disabled = {isEditing ? false : true }\n    type=\"text\" onChange={onChange} value={text}\n  />\n  <InputGroup.Append>\n    <Button variant=\"outline-secondary\"   onClick={ isEditing ? onCheckClick: onEditClick } >\n    { isEditing ? <MdCheck />: <MdEdit/> }  */}\n      {/* Edit */}\n    {/* </Button>\n  </InputGroup.Append>\n</InputGroup> */}","C:\\Users\\123\\Desktop\\semster 8\\WEB\\final\\updated_project- elias-reham\\201277811_318292604\\Client\\src\\data\\Global.js",[],"C:\\Users\\123\\Desktop\\semster 8\\WEB\\final\\updated_project- elias-reham\\201277811_318292604\\Client\\src\\components\\Navbar.jsx",["173","174"],"import React from 'react';\nimport {Navbar, Nav} from 'react-bootstrap';\nimport {Icon, InlineIcon} from '@iconify/react';\nimport {connect, useSelector} from 'react-redux';\nimport {useDispatch} from 'react-redux';\nimport {currentUser, setCurrentUser} from '../data/Global';\n\nfunction Navbar2(props) {\n  const dispatch = useDispatch();\n  const user = useSelector(currentUser);\n\n  const onLogOut = () => {\n    dispatch(setCurrentUser(null));\n  };\n\n  return (\n    <>\n      <Navbar\n        collapseOnSelect\n        sticky=\"top\"\n        expand=\"lg\"\n        className=\"navbarc myNavBar shadow\"\n      >\n        <Navbar.Brand id=\"gradingSystem\">Grading System <span className=\"navbar-username\">{user && `${user.fname} ${user.lname}`}</span></Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav>\n            <Nav.Link eventKey={2} href=\"/\" onClick={onLogOut}>\n              <div>Log Out</div>\n            </Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    </>\n  );\n}\nconst mapStateToProps = (state) => {\n  return {currentCourse: state.currentCourse};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    dispatch,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar2);\n","C:\\Users\\123\\Desktop\\semster 8\\WEB\\final\\updated_project- elias-reham\\201277811_318292604\\Client\\src\\components\\HomeworkForm.jsx",["175","176","177","178"],"import React, {useRef, useState, useEffect} from 'react';\nimport {Button, Container, Form} from 'react-bootstrap';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {addHomework, addSubmission, getAllUsersInCourse} from '../API/API';\nimport {currentCourse, setIsAddHomeworkHidden} from '../data/Global';\nimport DateTimePicker from './DateTimePicker';\nimport TemporaryAlert from './TemporaryAlert';\n\nexport default function HomeworkForm() {\n  const course = useSelector(currentCourse);\n  const dispatch = useDispatch();\n\n\n  useEffect(() => {\n    dispatch(setIsAddHomeworkHidden(true));\n  }, [])\n\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [deadline, setDeadline] = useState(new Date());\n  const handleDateChange = (date) => {\n    try {\n      date.toISOString();\n      setDeadline(date);\n    } catch (error) {}\n  };\n\n  const onChangeTitle = (e) => {\n    setTitle(e.target.value);\n  };\n  const onChangeDescription = (e) => {\n    setDescription(e.target.value);\n  };\n\n  const alertRef = useRef();\n  const [alertType, setAlertType] = useState('warning');\n  const alertWarnHeading = 'Fields missing!';\n  const alertWarnBody = 'Please fill all of the missing fields!';\n  const alertSuccessHeading = 'Success!';\n  const alertSuccessBody = 'homework has been created!';\n\n  const handleOnSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const deadlineStr = deadline.toISOString();\n      console.log('submittd', deadlineStr);\n\n      if (title !== '' && description !== '') {\n        //insert homework\n\n        const cid = course[0].cid;\n        addHomework(cid, title, description, deadlineStr).then((res) => {\n          setAlertType('success');\n          alertRef.current.showAlert();\n          setTitle('');\n          setDescription('');\n          setDeadline(new Date());\n\n          // get all students in course\n          getAllUsersInCourse(cid).then((r1) => {\n            r1.data.forEach((p) => {\n              if (p.type == 'student') {\n                addSubmission(p.id, res.data);\n                console.log('student id ', res.data);\n              }\n            });\n          });\n        });\n      } else {\n        setAlertType('warning');\n        alertRef.current.showAlert();\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <Container>\n      <TemporaryAlert\n        body={alertType == 'success' ? alertSuccessBody : alertWarnBody}\n        heading={\n          alertType == 'success' ? alertSuccessHeading : alertWarnHeading\n        }\n        type={alertType}\n        ref={alertRef}\n      />\n\n      <h1>Add Homework</h1>\n      <Form onSubmit={handleOnSubmit}>\n        <Form.Group>\n          <Form.Label>Title</Form.Label>\n          <Form.Control\n            autoComplete=\"off\"\n            placeholder=\"Enter title\"\n            onChange={onChangeTitle}\n            value={title}\n          />\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Description</Form.Label>\n          <Form.Control\n            autoComplete=\"off\"\n            placeholder=\"Enter description\"\n            onChange={onChangeDescription}\n            value={description}\n          />\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Deadline</Form.Label>\n          <DateTimePicker onChange={handleDateChange} value={deadline} />\n        </Form.Group>\n\n        <Button className=\"float-right\" variant=\"primary\" type=\"submit\">\n          Submit\n        </Button>\n      </Form>\n    </Container>\n  );\n}\n","C:\\Users\\123\\Desktop\\semster 8\\WEB\\final\\updated_project- elias-reham\\201277811_318292604\\Client\\src\\components\\CourseForm.jsx",["179","180","181","182","183","184","185"],"import React, {useEffect, useState, useRef} from 'react';\nimport {Container, Form, Button, Alert} from 'react-bootstrap';\nimport {\n  addParticipantToCourse,\n  getAllUsers,\n  getAllUsersInCourse,\n  addCourse,\n} from '../API/API';\nimport ColorfulSelect from './ColorfulSelect';\nimport TemporaryAlert from './TemporaryAlert';\nimport Card from 'react-bootstrap/Card';\n\n\nexport default function CourseForm({cid = -1}) {\n  const [options, setOptions] = useState([]);\n  const [initialOptions, setInitialOptions] = useState([]);\n  useEffect(() => {\n    getAllUsersInCourse(cid).then((r1) => {\n      // get all\n      getAllUsers().then((r2) => {\n        let inCourse = [];\n        r1.data.forEach((p) => {\n          const elm = {\n            value: `${p.id}`,\n            color: p.type == 'student' ? '#0e7bf1' : 'red',\n            label: `${p.fname} ${p.lname} (${p.id})`,\n          };\n          inCourse.push(elm);\n        });\n\n        let allP = [];\n        r2.data.forEach((p) => {\n          const elm = {\n            value: `${p.id}`,\n            color: p.type == 'student' ? '#0e7bf1' : 'red',\n            label: `${p.fname} ${p.lname} (${p.id})`,\n          };\n          allP.push(elm);\n        });\n\n        // notInCourse = allP \\ inCourse\n        // Let inCourse be 'b'\n        let b = new Set(inCourse.map((x) => x.value));\n        let notInCourse = [...allP].filter((x) => !b.has(x.value));\n\n        setInitialOptions(inCourse);\n        setOptions(notInCourse);\n      });\n    });\n  }, []);\n\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [participants, setParticipants] = useState([]);\n\n  const onChangeTitle = (e) => {\n    setTitle(e.target.value);\n  };\n  const onChangeDescription = (e) => {\n    setDescription(e.target.value);\n  };\n  const onChangeParticipants = (values) => {\n    setParticipants(values);\n  };\n  const handleOnSubmit = async (event) => {\n    event.preventDefault();\n    if (title !== '' && description !== '' && participants !== []) {\n      // insert course\n      addCourse(title, description).then((res) => {\n        // insert courseParticipant\n        const newCourseId = res.data;\n        participants.forEach((p) => {\n          const id = p.value;\n          addParticipantToCourse(newCourseId, id);\n        });\n        setAlertType('success');\n        alertRef.current.showAlert();\n        setTitle('');\n        setDescription('');\n      });\n    } else {\n      setAlertType('warning');\n      alertRef.current.showAlert();\n    }\n  };\n  const alertRef = useRef();\n  const [alertType, setAlertType] = useState('warning');\n  const alertWarnHeading = 'Fields missing!';\n  const alertWarnBody = 'Please fill all of the missing fields!';\n  const alertSuccessHeading = 'Success!';\n  const alertSuccessBody = 'course has been created!';\n  return (\n    <Card className=\"card-page\">\n       <Card.Header as=\"h5\"> Add New Course </Card.Header>\n       <Card.Body>\n          <Card.Title>\n          <TemporaryAlert\n            body={alertType == 'success' ? alertSuccessBody : alertWarnBody}\n            heading={\n              alertType == 'success' ? alertSuccessHeading : alertWarnHeading\n            }\n            type={alertType}\n            ref={alertRef}\n          />\n          </Card.Title>\n          <Card.Text>\n          <Form onSubmit={handleOnSubmit}>\n            <Form.Group>\n              <Form.Label>Title</Form.Label>\n              <Form.Control\n                autoComplete=\"off\"\n                placeholder=\"Enter title\"\n                onChange={onChangeTitle}\n                value={title}\n              />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>Description</Form.Label>\n              <Form.Control\n                autoComplete=\"off\"\n                placeholder=\"Enter description\"\n                onChange={onChangeDescription}\n                value={description}\n              />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>\n                Participants (<span className=\"text-primary\">Students</span> |{' '}\n                <span className=\"text-danger\">Teachers</span>)\n              </Form.Label>\n              <ColorfulSelect\n                options={options}\n                initialOptions={initialOptions}\n                onChange={onChangeParticipants}\n              />\n            </Form.Group>\n\n            <Button className=\"float-right\" variant=\"primary\" type=\"submit\">\n              Submit\n            </Button>\n          </Form>\n          </Card.Text>\n      </Card.Body>\n    </Card>\n\n  );\n}\n","C:\\Users\\123\\Desktop\\semster 8\\WEB\\final\\updated_project- elias-reham\\201277811_318292604\\Client\\src\\pages\\LogInPage.jsx",["186"],"import React, {useState, useEffect, useRef} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport {useDispatch} from 'react-redux';\nimport {\n  setCurrentUser,\n  setCourseActive,\n  setHomeWorkActive,\n  setHomeWorksActive,\n  setIsAddCourseHidden,\n  setHideSubmissionDetails,\n  setIsAddHomeworkHidden,\n} from '../data/Global';\nimport {useHistory} from 'react-router-dom';\nimport {setCoursesActive} from '../data/Global';\nimport {logIn} from '../API/API';\nimport TemporaryAlert from '../components/TemporaryAlert';\n\nexport default function Login() {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(setIsAddHomeworkHidden(false));\n\n    dispatch(setCoursesActive(true));\n    dispatch(setCourseActive(true));\n    dispatch(setHomeWorkActive(true));\n    dispatch(setHomeWorksActive(true));\n    dispatch(setIsAddCourseHidden(true));\n    dispatch(setHideSubmissionDetails(true));\n  }, []);\n\n  const [id, setId] = useState('');\n  const [password, setPassword] = useState('');\n  const alertRef = useRef();\n  function validateForm() {\n    return id.length > 0 && password.length > 0;\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    logIn(id, password).then((res) => {\n      console.log(\"res: \",res)\n      if (res && res.data && res.data.length !== 0) {\n  \n        if (res.data[0].fname === 'Admin' && res.data[0].lname === 'Admin') {\n          history.push('/AdminPage');\n          dispatch(setCurrentUser(res.data[0]));\n        } else {\n          history.push('/Courses');\n          dispatch(setCurrentUser(res.data[0]));\n          dispatch(setCoursesActive(false));\n        }\n      } else {\n        alertRef.current.showAlert();\n      }\n    });\n  }\n\n  const alertHeading = 'Log in failed';\n  const alertBody = 'Password or ID are not correct! try again.';\n\n  return (\n    <Card className=\"Login card-page\">\n       <TemporaryAlert\n        body={alertBody}\n        heading={alertHeading}\n        type=\"warning\"\n        ref={alertRef}\n      />\n      <Card.Header as=\"h5\">\n        LogIn\n      </Card.Header>\n      <Card.Body>\n        <Card.Title> </Card.Title>\n        <Card.Text> \n          <Form onSubmit={handleSubmit}> \n            <Form.Group as={Row} size=\"xlg\" controlId=\"email\">\n              <Form.Label column sm=\"3\">\n                ID\n              </Form.Label>\n              <Col sm=\"9\">\n                <Form.Control \n                              autoFocus  \n                              type=\"number\" \n                              value={id}  \n                              onChange={(e) => setId(e.target.value)}\n                />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row} size=\"lg\" controlId=\"password\">\n              <Form.Label column lg=\"3\"> Password </Form.Label>\n              <Col lg=\"9\">\n                <Form.Control \n                            type=\"password\" \n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                />\n              </Col>\n            </Form.Group>\n            <Button block size=\"lg\" variant=\"primary\" type=\"submit\" disabled={!validateForm()}>\n              Login\n            </Button>\n          </Form>\n        </Card.Text>\n      </Card.Body>\n    </Card>\n  \n  );\n}\n","C:\\Users\\123\\Desktop\\semster 8\\WEB\\final\\updated_project- elias-reham\\201277811_318292604\\Client\\src\\pages\\AllCoursesPage.jsx",["187","188","189"],"import React, {useEffect, useState} from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport CourseCell from '../components/CourseCell';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {\n  setCurrentCourse,\n  setCourseActive,\n  setHomeWorkActive,\n  currentUser,\n  setCurrentCourseTitle,\n  setHideSubmissionDetails,\n  setIsAddCourseHidden,\n  setIsAddHomeworkHidden,\n} from '../data/Global';\nimport {useHistory} from 'react-router-dom';\nimport {getUserCourses} from '../API/API';\nimport {Button} from 'react-bootstrap';\nconst axios = require('axios');\n\n\nexport default function MainPage() {\n  const history = useHistory();\n  const [coursesData, setCoursesData] = useState([]);\n  const user = useSelector(currentUser);\n  const [isLoading, setIsLoading] = useState(true);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (user) {\n      getUserCourses(user.id).then((res1) => {\n        const rawData = res1.data;\n\n        let d = new Map();\n        rawData.forEach((r) => {\n          if (!d.has(r.cid)) {\n            d.set(r.cid, []);\n          }\n          d.get(r.cid).push(r);\n        });\n        const crses = [];\n        d.forEach((v, k) => {\n          crses.push(v);\n        });\n\n        setCoursesData(crses);\n        setIsLoading(false);\n      });\n      dispatch(setIsAddHomeworkHidden(false));\n\n      dispatch(setCourseActive(true));\n      dispatch(setHomeWorkActive(true));\n      dispatch(setHideSubmissionDetails(true));\n      dispatch(setIsAddCourseHidden(true));\n    }\n  }, [user]);\n\n  const onCourseClick = (course) => {\n    \n    dispatch(setCurrentCourse(course));\n    dispatch(setCurrentCourseTitle(course[0].title));\n    history.push('/Course');\n  };\n\n  const onAddCourseClicked = () => {\n    dispatch(setIsAddCourseHidden(false));\n    history.push('/CourseForm');\n  };\n  return (\n    <Card className=\"card-page\">\n       <Card.Header as=\"h5\"> Courses </Card.Header>\n       <Card.Body>\n          <Card.Title>\n          {user && user.type === 'teacher' && (\n            <div className=\"pb-5\">\n              <Button className=\"float-right mb-2\" onClick={onAddCourseClicked}>\n                Add Course\n              </Button>\n            </div>\n          )}\n          </Card.Title>\n          <Card.Text>\n          {!isLoading ? (\n            coursesData &&\n            coursesData.length > 0 &&\n            coursesData.map((course, index) => {\n              return (\n                <Row key={index}>\n                  <CourseCell\n                    course={course}\n                    onClick={() => onCourseClick(course)}\n                  />\n                </Row>\n              );\n            })\n          ) : (\n            <p>Loading courses...</p>\n          )}\n          </Card.Text>\n       </Card.Body>\n    </Card>\n\n  );\n}\n","C:\\Users\\123\\Desktop\\semster 8\\WEB\\final\\updated_project- elias-reham\\201277811_318292604\\Client\\src\\pages\\CoursePage.jsx",["190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209"],"import React, {useEffect, useRef, useState} from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Form from 'react-bootstrap/Form';\nimport CourseStudentHomeWorkCell from '../components/CourseStudentHomeWorkCell';\nimport CourseTeacherHomeWorkCell from '../components/CourseTeacherHomeWorkCell';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {\n  currentUser,\n  setCourseActive,\n  setHomeWorkActive,\n  currentCourse,\n  setCurrentHomeworkStudent,\n  setCurrentHomeworkTeacher,\n  setHomeWorksActive,\n  setCurrentHomeworkTitle,\n  setHideSubmissionDetails,\n  setIsAddCourseHidden,\n  setCurrentCourseTitle,\n  setCurrentCourse,\n  setCurrentSubmission,\n  setCurrentSubmissionStudentId,\n  setIsAddHomeworkHidden,\n} from '../data/Global';\n\nimport {useHistory} from 'react-router-dom';\nimport {\n  getStudentHomeWorks,\n  getCourseHomeWorks,\n  updateCourse,\n} from '../API/API';\nimport {getStudentDetails} from '../API/API';\nimport UploadDisplayer from '../components/UploadDisplayer';\nimport {MdEdit, MdCheck} from 'react-icons/md';\nimport {Button, FormControl} from 'react-bootstrap';\nimport EditableParagraph from '../components/EditableParagraph';\nimport {toDateTimeString} from '../Util/TimeUtil';\n\nexport default function Course() {\n  const course = useSelector(currentCourse);\n  const [CourseStudentHomeWorks, setCoursesStudentHomeWorks] = useState([]);\n  const [CourseTeacherHomeWorks, setCoursesTeacherHomeWorks] = useState([]);\n  const user = useSelector(currentUser);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const [courseName, setCourseName] = useState('');\n  const [courseDescription, setCourseDescription] = useState('');\n  useEffect(() => {\n    console.log(\"Dsfdsf\")\n    setCourseName(course[0].title);\n    setCourseDescription(course[0].description);\n\n    getCourseHomeWorks(course[0].cid).then((res) => {\n      let sortedRes = res.data;\n\n      sortedRes.sort(function (a, b) {\n        return ('' + a.title).localeCompare(b.title);\n      });\n      setCoursesTeacherHomeWorks(sortedRes);\n    });\n\n    getStudentHomeWorks(user.id, course[0].cid).then((res) => {\n      let sortedRes = res.data;\n      sortedRes.sort(function (a, b) {\n        return ('' + a.title).localeCompare(b.title);\n      });\n\n      setCoursesStudentHomeWorks(sortedRes);\n      console.log('submissions', sortedRes);\n    });\n  }, []);\n\n  useEffect(() => {\n    dispatch(setCourseActive(false));\n    dispatch(setHomeWorkActive(true));\n    dispatch(setHomeWorksActive(true));\n    dispatch(setHideSubmissionDetails(true));\n    dispatch(setIsAddCourseHidden(true));\n    dispatch(setIsAddHomeworkHidden(false));\n\n  }, []);\n\n  const onClickStudent = (stuSub) => {\n    getStudentDetails(stuSub.studentid).then((res) => {\n      // dispatch(setCurrStuTeachViewActive(res.data));\n      const data = {\n        homeworkTitle: stuSub.title,\n        student: res.data[0],\n        submission: stuSub,\n        description: stuSub.description,\n\n      };\n      dispatch(setCurrentSubmission(data));\n      dispatch(setHideSubmissionDetails(false));\n      dispatch(setCurrentSubmissionStudentId(stuSub.title));\n      dispatch(setCourseActive(false));\n\n      history.push('/SubmissionTeacherView');\n    });\n  };\n\n  const onClickTeacher = (HomeWork) => {\n    dispatch(setCurrentHomeworkTeacher(HomeWork));\n    dispatch(setCourseActive(false));\n    dispatch(setCurrentHomeworkTitle(HomeWork.title));\n    history.push('/HomeworksTeacherView');\n  };\n\n  const onEditDescriptionSuccess = (value) => {\n    setCourseDescription(value);\n    // update in server\n    updateCourse(course[0].cid, courseName, value);\n    updateCourseLocal(courseName, value);\n  };\n  const onEditTitleSuccess = (value) => {\n    setCourseName(value);\n    // update in server\n    updateCourse(course[0].cid, value, courseDescription);\n    updateCourseLocal(value, courseDescription);\n  };\n\n  const updateCourseLocal = (title, description) => {\n    let courseCopy = JSON.parse(JSON.stringify(course));\n    courseCopy.forEach((c) => {\n      c.title = title;\n      c.description = description;\n    });\n    dispatch(setCurrentCourse(courseCopy));\n    dispatch(setCurrentCourseTitle(courseCopy[0].title));\n  };\n\n  const onClickAddHomework = () => {\n    history.push('/HomeworkForm');\n  };\n\n  return (\n    <Card className=\"Login card-page\">\n      <Card.Header as=\"h5\"> Course Page </Card.Header>\n      <Card.Body>\n        <Card.Title>\n          <h1 className=\"centerTitle\">Course Page</h1>\n         \n          {user && user.type == 'teacher' ? (\n            <EditableParagraph\n              headingClass=\"h3 text-center\"\n              value={courseName}\n              onEditSuccess={onEditTitleSuccess}\n              extraText={\"Course Name: \"}\n\n            />\n          ) : (\n            <h5 className=\" p-4\">Course Name: {courseName}</h5>\n          )}\n          \n          {user && user.type == 'teacher' ? (\n            <EditableParagraph\n              headingClass=\"h5\"\n              value={courseDescription}\n              onEditSuccess={onEditDescriptionSuccess}\n              extraText={\"Description: \"}\n\n            />\n          ) : (\n            <h5 className=\" p-4\">Description: {courseDescription}</h5>\n          )}\n\n          {course && course.length > 0 && (\n            <UploadDisplayer\n              fkValue={course[0].cid}\n              fk=\"course_id\"\n              table=\"course_file\"\n              allowUpload={user.type == 'teacher'}\n              allowDelete={user.type == 'teacher'}\n            />\n          )}\n        </Card.Title>\n        <Card.Text>\n          <h3 className=\"text-center\">Homeworks</h3>\n          {user.type == 'teacher' && (\n            <div className=\"ml-5 ml-5 mt-3 mb-3\">\n              <Button\n                variant=\"primary\"\n                type=\"submit\"\n                onClick={onClickAddHomework}\n              >\n                Add Homework\n              </Button>\n            </div>\n          )}\n\n          {user.type == 'teacher' && CourseTeacherHomeWorks.length == 0 && (\n            <h5>No homeworks yet!, add homework</h5>\n          )}\n          {user.type == 'teacher' &&\n            CourseTeacherHomeWorks.map((HomeWork, i) => {\n              return (\n                <Row key={i}>\n                  <CourseTeacherHomeWorkCell\n                    id={HomeWork.id}\n                    Title={HomeWork.title}\n                    DeadLine={toDateTimeString(HomeWork.deadline)}\n                    onClick={() => onClickTeacher(HomeWork)}\n                  />\n                </Row>\n              );\n            })}\n\n          {user.type == 'student' && CourseStudentHomeWorks.length == 0 && (\n            <h5>No homeworks yet!</h5>\n          )}\n          {user.type == 'student' &&\n            CourseStudentHomeWorks.map((HomeWork, i) => {\n              return (\n                <Row key={i}>\n                  <CourseStudentHomeWorkCell\n                    id={HomeWork.id}\n                    Title={HomeWork.title}\n                    DeadLine={toDateTimeString(HomeWork.deadline)}\n                    Status={HomeWork.grade > 0 ? \"Graded\" : \"Not graded\"}\n                    onClick={() => onClickStudent(HomeWork)}\n                  />\n                </Row>\n              );\n            })}\n        </Card.Text>\n      </Card.Body>\n    </Card>\n   \n  );\n}\n","C:\\Users\\123\\Desktop\\semster 8\\WEB\\final\\updated_project- elias-reham\\201277811_318292604\\Client\\src\\pages\\HomeworksTeacherViewPage.jsx",["210","211","212","213","214","215"],"import React, {useEffect, useRef, useState} from 'react';\nimport Card from 'react-bootstrap/Card';\n\nimport {\n  setHomeWorksActive,\n  currentHomeworkTeacher,\n  setHomeWorkActive,\n  currentUser,\n  setCurrentSubmission,\n  setHideSubmissionDetails,\n  setCurrentSubmissionStudentId,\n  setCurrentHomeworkTeacher,\n  setCurrentHomeworkTitle,\n} from '../data/Global';\nimport {useSelector, useDispatch} from 'react-redux';\n\nimport {\n  getStudentsHomeWorks,\n  getStudentDetails,\n  updateHomework,\n  deleteHomework,\n} from '../API/API';\nimport Container from 'react-bootstrap/Container';\nimport {useHistory} from 'react-router-dom';\nimport UploadDisplayer from '../components/UploadDisplayer';\nimport {toDateTimeString} from '../Util/TimeUtil';\nimport SubmissionCell from '../components/SubmissionCell';\nimport EditableParagraph from '../components/EditableParagraph';\nimport EditableDateTime from '../components/EditableDateTime';\nimport {MdDeleteForever} from 'react-icons/md';\nimport CustomerDialog from '../components/CustomerDialog';\nimport {Button, Modal} from 'react-bootstrap';\n\nexport default function HomeworkTeacherView() {\n  const Homework = useSelector(currentHomeworkTeacher);\n  const history = useHistory();\n  const user = useSelector(currentUser);\n\n  const dispatch = useDispatch();\n  const [StudentsHomeWorks, setStudentHomeWorks] = useState([]);\n  const [deadline, setDeadline] = useState();\n\n  useEffect(() => {\n    getStudentsHomeWorks(Homework.id).then((res) => {\n      let x = res.data;\n      setStudentHomeWorks(x);\n    });\n  }, []);\n\n  useEffect(() => {\n    dispatch(setHideSubmissionDetails(true));\n    dispatch(setHomeWorkActive(false));\n    dispatch(setHomeWorksActive(true));\n  }, []);\n\n  const onSubmissionClick = (stuSub) => {\n    getStudentDetails(stuSub.studentid).then((res) => {\n      // dispatch(setCurrStuTeachViewActive(res.data));\n      const data = {\n        homeworkTitle: Homework.title,\n        student: res.data[0],\n        submission: stuSub,\n        description: Homework.description,\n      };\n      dispatch(setCurrentSubmission(data));\n      dispatch(setHideSubmissionDetails(false));\n      dispatch(setCurrentSubmissionStudentId(stuSub.studentid));\n      history.push('/SubmissionTeacherView');\n    });\n  };\n\n  const onEditTitleSuccess = (value) => {\n    // update in server\n    console.log('updating title', value);\n    updateHomeworkLocal(value, Homework.description, Homework.deadline);\n    updateHomework(Homework.id, value, Homework.description, Homework.deadline);\n  };\n\n  const onEditDescriptionSuccess = (value) => {\n    // update in server\n    updateHomeworkLocal(Homework.title, value, Homework.deadline);\n    updateHomework(Homework.id, Homework.title, value, Homework.deadline);\n  };\n\n  const onEditDeadlineSuccess = (value) => {\n    setDeadline(toDateTimeString(value));\n    console.log('new deadline:', value);\n    const deadlineStr = value;\n    // update in server\n    updateHomeworkLocal(Homework.title, Homework.description, deadlineStr);\n    updateHomework(\n      Homework.id,\n      Homework.title,\n      Homework.description,\n      deadlineStr\n    );\n  };\n\n  const updateHomeworkLocal = (title, description, deadline) => {\n    let homeworkCopy = JSON.parse(JSON.stringify(Homework));\n    homeworkCopy.title = title;\n    homeworkCopy.description = description;\n    homeworkCopy.deadline = deadline;\n\n    dispatch(setCurrentHomeworkTeacher(homeworkCopy));\n    dispatch(setCurrentHomeworkTitle(homeworkCopy.title));\n  };\n  const onDeleteClick = () => {\n    setShow(true);\n  };\n  const onHomeworkDeleteConfirmed = () => {\n    deleteHomework(Homework.id).then((res) => {\n      history.goBack();\n    });\n  };\n  const onHomeworkDeleteDeclined = () => {\n    handleClose();\n  };\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  return (\n    <>\n    \n      <h1 className=\"centerTitle\">Homework Page</h1>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Delete Homework</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>Are you sure you want to delete this homework?</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={onHomeworkDeleteDeclined}>\n            Close\n          </Button>\n          <Button variant=\"danger\" onClick={onHomeworkDeleteConfirmed}>\n            Delete\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      \n      <Card className=\"Login card-page\">\n\n        <Card.Header as=\"h5\">  </Card.Header>\n        <Card.Body>\n          <Card>\n            <Card.Header as=\"h5\">Students' Submissions</Card.Header>\n            <Card.Body>\n              <Card.Text>\n                <MdDeleteForever\n                  className=\"editIcon float-right\"\n                  onClick={onDeleteClick}\n                  color=\"red\"\n                  size=\"2em\"\n                />\n                <span\n                  className=\"float-right\"\n                  style={{fontSize: '1.2em', color: 'red', cursor: 'pointer'}}\n                  onClick={onDeleteClick}\n                >\n                  Delete\n                </span>\n                <EditableParagraph\n                  headingClass=\"h3 p-3 mb-3\"\n                  value={Homework.title}\n                  onEditSuccess={onEditTitleSuccess}\n                  extraText={\"Title: \"}\n\n                />\n                <div>\n              \n                  <EditableDateTime\n                    headingClass=\"h4 p-3 mb-3\"\n                    value={Homework.deadline}\n                    onEditSuccess={onEditDeadlineSuccess}\n                    extraText={\"Deadline: \"}\n                  />\n                </div>\n\n                <EditableParagraph\n                  headingClass=\"h4 p-3 mb-3\"\n                  value={Homework.description}\n                  onEditSuccess={onEditDescriptionSuccess}\n                  extraText={\"Description: \"}\n\n                />\n                <UploadDisplayer\n                  fkValue={Homework.id}\n                  fk=\"homework_id\"\n                  table=\"homework_file\"\n                  allowUpload={user.type === 'teacher'}\n                  allowDelete={user.type === 'teacher'}\n                />\n             </Card.Text>\n            </Card.Body>\n          </Card>\n          <Card.Title>\n          \n          </Card.Title>\n          <Card.Text>\n         \n            {StudentsHomeWorks.length === 0 && <h4>No submissions yet!</h4>}\n            {StudentsHomeWorks.map((submission, i) => {\n              return (\n                <SubmissionCell\n                  key={i}\n                  className=\"item\"\n                  submission={submission}\n                  onClick={() => onSubmissionClick(submission)}\n                />\n              );\n            })}\n          </Card.Text>\n        </Card.Body>\n      </Card>\n   \n    </>\n  );\n}\n","C:\\Users\\123\\Desktop\\semster 8\\WEB\\final\\updated_project- elias-reham\\201277811_318292604\\Client\\src\\pages\\HomeworkStudentViewPage.jsx",["216","217","218","219"],"import React, { useEffect, useState } from \"react\";\nimport {\n  setHomeWorksActive,\n  currentHomeworkStudent,\n  setHomeWorkActive,\n} from \"../data/Global\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport SpecificHomeWorkCell from \"../components/SpecificHomeWorkCell\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\n// import { Card } from \"@material-ui/core\";\nimport Card from 'react-bootstrap/Card';\n\n\nexport default function HomeworkStudentView() {\n  const student_hw = useSelector(currentHomeworkStudent);\n  const [hwDetails, setSubmittedHomeWork] = useState(\"\");\n  // var SubmittedHomeWork;\n  const dispatch = useDispatch();\n  useEffect(() => {\n\n  }, []);\n\n  useEffect(() => {\n    dispatch(setHomeWorkActive(false));\n    dispatch(setHomeWorksActive(true));\n  }, []);\n  return (\n    <>\n      <Card className=\"Login card-page\">\n\n        <Card.Header as=\"h5\">\n          <h1 className=\" p-3 mb-3\">{hwDetails.title}</h1>\n          <h4 className=\" p-3 mb-3\">{hwDetails.description}</h4>\n        </Card.Header>\n        <Card.Body>\n          <Card.Title> </Card.Title>\n          <Card.Text>\n            <Row>\n              {hwDetails && (\n                <SpecificHomeWorkCell\n                  id={hwDetails.studentId}\n                  SubmissionId={hwDetails.id}\n                  name={hwDetails.Name}\n                  submitteddate={hwDetails.updatedAt}\n                  homeworkfile={hwDetails.homeworkfile}\n                  Status={hwDetails.status}\n                  Grade={hwDetails.grade}\n                  deadline={hwDetails.deadline}\n                  allcommentssorted={hwDetails.AllCommentsSorted}\n                />\n              )}\n            </Row>\n          </Card.Text>\n        </Card.Body>\n      </Card>\n  \n    </>\n  );\n}\n","C:\\Users\\123\\Desktop\\semster 8\\WEB\\final\\updated_project- elias-reham\\201277811_318292604\\Client\\src\\pages\\SubmissionTeacherView.jsx",["220","221","222","223"],"import React, {useEffect, useState} from 'react';\nimport {currentSubmission} from '../data/Global';\nimport {useSelector, useDispatch} from 'react-redux';\nimport Container from 'react-bootstrap/Container';\nimport {intifiy, toDateTimeString} from '../Util/TimeUtil';\nimport Table from 'react-bootstrap/Table';\nimport {Form, Button} from 'react-bootstrap';\nimport {getComments, sendComment, updateSubmissionGrade} from '../API/API';\nimport {currentUser} from '../data/Global';\nimport UploadDisplayer from '../components/UploadDisplayer';\nimport EditableNumber from '../components/EditableNumber';\nimport Card from 'react-bootstrap/Card';\nexport default function SubmissionTeacherView() {\n  const submission = useSelector(currentSubmission);\n  const user = useSelector(currentUser);\n\n  useEffect(() => {\n    console.log('submission', submission);\n  }, []);\n\n  return (\n    <Card className=\"Login card-page\">\n        <Card.Header as=\"h5\"> Submission Page </Card.Header>\n        <Card.Body>\n          <Card.Title> {submission.homeworkTitle} </Card.Title>\n          <Card.Text>\n            <h5 className=\"pb-3 mb-3\">Description: {submission.description}</h5>\n            <h5 className=\"pb-3 mb-3\">{`Deadline: ${toDateTimeString(submission.submission.deadline )}`}</h5>\n\n            {user.type === 'student' && (\n              <UploadDisplayer\n                allowDelete={false}\n                allowUpload={false}\n                fkValue={submission.submission.homeworkid}\n                fk=\"homework_id\"\n                table=\"homework_file\"\n              />\n            )}\n            {user.type === 'student' && <h5>Your Submission:</h5>}\n            <SubmissionDetails sub={submission.submission} stu={submission.student} />\n          </Card.Text>\n        </Card.Body>\n    </Card>\n\n  );\n}\n\nconst SubmissionDetails = ({sub, stu}) => {\n  const user = useSelector(currentUser);\n  const [grade, setGrade] = useState(sub.grade === -1 ? 'set grade' : sub.grade);\n  const onEditGrade = (value) => {\n    if (value !== '' && value >= 0 && value <= 100) {\n      setGrade(value);\n      updateSubmissionGrade(sub.id, stu.id, sub.homeworkid, value);\n    }\n  };\n  return (\n    <div className=\"submission-details-table\">\n      <Table responsive>\n        <tbody>\n          <tr>\n            <td>ID:</td>\n            <td>{stu.id}</td>\n          </tr>\n          <tr>\n            <td>Name:</td>\n            <td>{`${stu.fname} ${stu.lname}`}</td>\n          </tr>\n          <tr>\n            <td>Submitted At:</td>\n            <td>{toDateTimeString(sub.created_at)}</td>\n          </tr>\n\n          <tr>\n            <td>Grade:</td>\n            {user.type === 'teacher' && (\n              <td>\n                <EditableNumber value={grade} onEditSuccess={onEditGrade} />\n              </td>\n            )}\n            {user.type === 'student' && (\n              <td>{sub.grade >= 0 ? sub.grade : '-'}</td>\n            )}\n          </tr>\n\n          <tr>\n            <td>Status:</td>\n            <td>{grade >= 0 ? 'Graded' : 'Waiting for grading'}</td>\n          </tr>\n\n          <tr>\n            <td>Comments:</td>\n            <td>\n              <Comments submissionId={sub.id} stuId={stu.id} />\n            </td>\n          </tr>\n        </tbody>\n      </Table>\n      {user && (\n        <UploadDisplayer\n          allowDelete={user.type === 'student'}\n          allowUpload={user.type === 'student'}\n          fkValue={sub.id}\n          fk=\"submissionid\"\n          table=\"submissionfile\"\n          style=\"p-3 border-top\"\n        />\n      )}\n    </div>\n  );\n};\n\nconst Comments = ({submissionId, stuId}) => {\n  const [str, setStr] = useState('');\n  const [comments, setComments] = useState([]);\n  const user = useSelector(currentUser);\n\n  const loadComments = (sub_id) => {\n    getComments(sub_id).then((res) => {\n      console.log('comments:', res.data);\n      setComments(res.data);\n    });\n  };\n  useEffect(() => {\n    loadComments(submissionId);\n  }, [submissionId]);\n\n  const addComment = (content) => {\n    if (content !== '') {\n      sendComment(\n        user.id,\n        `${user.fname} ${user.lname}`,\n        user.type,\n        submissionId,\n        content\n      ).then((res) => {\n        loadComments(submissionId);\n        setStr('');\n      });\n    }\n  };\n  const onSubmit = (e) => {\n    e.preventDefault();\n    addComment(str);\n    setStr('');\n    return false;\n  };\n\n  const onChange = (e) => {\n    setStr(e.target.value);\n  };\n\n  return (\n    <div className=\"comments-container\">\n      {comments\n        .sort((a, b) => intifiy(b.createdat) - intifiy(a.createdat))\n        .map((c, i) => {\n          return <Comment key={i} c={c} stuId={stuId} />;\n        })}\n      <Form onSubmit={onSubmit}>\n        <Form.Group controlId=\"formAddComment\">\n          <Form.Label>Add a comment</Form.Label>\n          <Form.Control\n            autoComplete=\"off\"\n            type=\"text\"\n            placeholder=\"Comment\"\n            onChange={onChange}\n          />\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\" className=\"float-right\">\n          Send\n        </Button>\n      </Form>\n    </div>\n  );\n};\n\nconst Comment = ({c, stuId}) => {\n  const isMe = stuId === c.authorid;\n\n  const cn1 = `single-comment ${isMe && 'single-comment-me'}`;\n  const cn2 = `single-comment-inner-container ${\n    isMe && 'single-comment-inner-container-me'\n  }`;\n  const cn3 = `single-comment-box ${isMe && 'single-comment-box-me'}`;\n  const cn4 = `single-comment-content ${isMe && 'single-comment-content-me'}`;\n\n  return (\n    <div className={cn1}>\n      <div className={cn2}>\n        <div className={cn3}>\n          <div className=\"single-comment-author\">{c.authorfullname}</div>\n          <div className={cn4}>{c.content}</div>\n          <div className=\"single-comment-time\">\n            {toDateTimeString(c.createdat)}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","C:\\Users\\123\\Desktop\\semster 8\\WEB\\final\\updated_project- elias-reham\\201277811_318292604\\Client\\src\\pages\\AdminPage.jsx",["224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244"],"import React, {useEffect, useState, useRef} from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport { BsTrash } from \"react-icons/bs\";\nimport {useSelector, useDispatch} from 'react-redux';\nimport {\n  setCurrentCourse,\n  setCourseActive,\n  setHomeWorkActive,\n  currentUser,\n  setCurrentCourseTitle,\n  setHideSubmissionDetails,\n  setIsAddCourseHidden,\n  setIsAddHomeworkHidden,\n} from '../data/Global';\nimport {useHistory} from 'react-router-dom';\nimport {\n  deleteCourse,\n  deleteUser,\n  getAllCourses,\n  getAllUsers,\n  getUserCourses,\n  addUser,\n  getUser,\n} from '../API/API';\nimport {Button, Form} from 'react-bootstrap';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport {Modal} from 'react-bootstrap';\nimport TemporaryAlert from '../components/TemporaryAlert';\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n  },\n});\nconst axios = require('axios');\n\nexport default function AdminPage() {\n  const history = useHistory();\n  const user = useSelector(currentUser);\n  const [isLoading, setIsLoading] = useState(true);\n  const dispatch = useDispatch();\n  const [courses, setCourses] = useState([]);\n  const [users, setUsers] = useState([]);\n\n  const fetchData = () => {\n    getAllUsers().then((res) => {\n      setUsers(res.data);\n    });\n\n    getAllCourses().then((res) => {\n      setCourses(res.data);\n    });\n  };\n  useEffect(() => {\n    if (user) {\n      // get all courses\n      // get all people\n\n      fetchData();\n\n      dispatch(setIsAddHomeworkHidden(false));\n      dispatch(setCourseActive(true));\n      dispatch(setHomeWorkActive(true));\n      dispatch(setHideSubmissionDetails(true));\n      dispatch(setIsAddCourseHidden(true));\n    }\n  }, [user]);\n\n  const onAddCourseClicked = () => {\n    dispatch(setIsAddCourseHidden(false));\n    history.push('/CourseForm');\n  };\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n  const [className, setClassName] = React.useState('course');\n  const [selectedUser, setSelectedUser] = useState(-1);\n  const [selectedCourse, setSelectedCourse] = useState(-1);\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n    switch (newValue) {\n      case 0:\n        setClassName('course');\n        break;\n      case 1:\n        setClassName('user');\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const onUserClick = (user) => {\n    setSelectedUser(user);\n    onDeleteClick();\n  };\n  const onCourseClick = (course) => {\n    setSelectedCourse(course);\n    onDeleteClick();\n  };\n  const onDeleteClick = () => {\n    setShow(true);\n  };\n  const onDeleteConfirmed = () => {\n    handleClose();\n    switch (value) {\n      // delete course\n      case 0:\n        deleteCourse(selectedCourse.id).then((res) => {\n          //refresh\n          fetchData();\n        });\n        break;\n      // delete user\n      case 1:\n        deleteUser(selectedUser.id).then((res) => {\n          //refresh\n          fetchData();\n        });\n        break;\n\n      default:\n        break;\n    }\n  };\n  const onHomeworkDeleteDeclined = () => {\n    handleClose();\n  };\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n\n  const alertRef = useRef();\n  const [alertType, setAlertType] = useState('warning');\n\n  const [alertWarnHeading, setAlertWarnHeading] = useState('Fields missing!');\n  const [alertWarnBody, setAlertWarnBody] = useState(\n    'Please fill all of the missing fields!'\n  );\n\n  const alertSuccessHeading = 'Success!';\n  const alertSuccessBody = 'User has been registered!';\n  const [userId, setUserId] = useState('');\n  const [userPass, setUserPass] = useState('');\n  const [userType, setUserType] = useState('');\n  const [userFname, setUserFname] = useState('');\n  const [userLname, setUserLname] = useState('');\n\n  const handleOnSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      if (\n        userId !== '' &&\n        userPass !== '' &&\n        userType !== '' &&\n        userFname !== '' &&\n        userLname !== ''\n      ) {\n        getUser(userId).then((res) => {\n          if (res.data.length !== 0) {\n            setAlertWarnHeading('User already exists!');\n            setAlertWarnBody(\n              'User already exists, please pick a different ID!'\n            );\n            setAlertType('warning');\n            alertRef.current.showAlert();\n          } else {\n            //insert user\n            addUser(userId, userFname, userLname, userPass, userType).then(\n              (res) => {\n                setAlertType('success');\n                alertRef.current.showAlert();\n                setUserId('');\n                setUserPass('');\n                setUserType('');\n                setUserFname('');\n                setUserLname('');\n                getAllUsers().then((res) => {\n                  setUsers(res.data);\n                });\n              }\n            );\n          }\n        });\n      } else {\n        setAlertWarnHeading('Fields missing!');\n        setAlertWarnBody('Please fill all of the missing fields!');\n        setAlertType('warning');\n        alertRef.current.showAlert();\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return (\n    <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Delete {className}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          Are you sure you want to delete this {className}: <br />{' '}\n          {value == 1\n            ? `${selectedUser.fname} ${selectedUser.lname} - ${selectedUser.id}`\n            : selectedCourse.title}\n          ?\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"danger\" onClick={onDeleteConfirmed}>\n            Delete\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      {user && user.type == 'admin' && (\n       <Card className=\"card-page\">\n        <Card.Header as=\"h5\">\n          <Paper className={classes.root}>\n            <Tabs\n              value={value}\n              onChange={handleChange}\n              indicatorColor=\"primary\"\n              textColor=\"primary\"\n              centered\n            >\n              <Tab label=\"Delete Courses\" />\n              <Tab label=\"Users\" />\n              <Tab label=\"Registeration\" />\n            </Tabs>\n          </Paper>\n          {/* Admin Page */}\n        </Card.Header>\n        <Card.Body>\n          <Card.Title>\n            \n          </Card.Title>\n          <Card.Text>\n            {value == 0 && (\n              <div className=\"submissions-box-teacher-view mt-5\">\n                {value == 0 &&\n                  courses &&\n                  courses.length > 0 &&\n                  courses.map((course, i) => {\n                    return (\n                      <div key={i}>\n                        <CourseCell\n                          course={course}\n                          onClick={() => onCourseClick(course)}\n                        />\n                      </div>\n                    );\n                  })}\n              </div>\n            )}\n            {value == 1 && (\n              <div className=\"submissions-box-teacher-view mt-5\">\n                {value == 1 &&\n                  users &&\n                  users.length > 0 &&\n                  users.map((user, i) => {\n                    return (\n                      <div key={i}>\n                        <UserCell user={user} onClick={() => onUserClick(user)} />\n                      </div>\n                    );\n                  })}\n              </div>\n            )}\n            {value == 2 && (\n              <h4 className=\"centerTitle mt-3\">Registeration</h4>\n            )}\n            {value == 2 && (\n              <div className=\"submissions-box-teacher-view mt-5\">\n                <div className=\"w-100 flex-column justify-content-center align-items-center\">\n                  <TemporaryAlert\n                    body={\n                      alertType == 'success' ? alertSuccessBody : alertWarnBody\n                    }\n                    heading={\n                      alertType == 'success'\n                        ? alertSuccessHeading\n                        : alertWarnHeading\n                    }\n                    type={alertType}\n                    ref={alertRef}\n                  />\n                  <Form className=\"p-5\" onSubmit={handleOnSubmit}>\n                    <Form.Group controlId=\"formBasicId\">\n                      <Form.Label>ID</Form.Label>\n                      <Form.Control\n                        onChange={(e) => setUserId(e.target.value)}\n                        type=\"number\"\n                        placeholder=\"Enter ID\"\n                      />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formBasicfname\">\n                      <Form.Label>First Name</Form.Label>\n                      <Form.Control\n                        onChange={(e) => setUserFname(e.target.value)}\n                        type=\"text\"\n                        placeholder=\"First Name\"\n                      />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formBasiclname\">\n                      <Form.Label>Last Name</Form.Label>\n                      <Form.Control\n                        onChange={(e) => setUserLname(e.target.value)}\n                        type=\"text\"\n                        placeholder=\"Last Name\"\n                      />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formBasicPassword\">\n                      <Form.Label>Password</Form.Label>\n                      <Form.Control\n                        onChange={(e) => setUserPass(e.target.value)}\n                        type=\"password\"\n                        placeholder=\"Password\"\n                      />\n                    </Form.Group>\n\n                    <Form.Check\n                      type=\"radio\"\n                      label=\"Student\"\n                      name=\"formHorizontalRadios\"\n                      id=\"student\"\n                      onClick={(e) => setUserType(e.target.id)}\n                    />\n                    <Form.Check\n                      type=\"radio\"\n                      label=\"Teacher\"\n                      name=\"formHorizontalRadios\"\n                      id=\"teacher\"\n                      onClick={(e) => setUserType(e.target.id)}\n                    />\n\n                    <Button className=\"mt-3\" variant=\"primary\" type=\"submit\">\n                      Submit\n                    </Button>\n                  </Form>\n                </div>\n              </div>\n            )}\n          </Card.Text>\n        </Card.Body>\n      </Card>\n\n      )}\n    </>\n  );\n}\n\nconst CourseCell = ({course, onClick}) => {\n  const [isHovering, setIsHovering] = useState(false);\n  const onMouseEnter = () => {\n    setIsHovering(true);\n  };\n\n  const onMouseLeave = () => {\n    setIsHovering(false);\n  };\n  const onContainerClick = () => {\n    onClick();\n  };\n\n  return (\n    <Card  className={`submission-container ${ isHovering ? ' shadow-lg' : 'shadow '  }${'CourseSubmittedHomeWork'} m-4  `}  onMouseEnter={onMouseEnter}  onMouseLeave={onMouseLeave} >\n      <Card.Header as=\"h5\">Course ID: {course.id}</Card.Header>\n      <Card.Body>\n        <Card.Title>Course: {course.title}</Card.Title>\n        <Card.Text>\n            \n        </Card.Text>\n      </Card.Body>\n        <Button className=\"remove\" variant=\"outline-danger\"  onClick={onContainerClick}> <BsTrash/></Button>\n    </Card>\n \n  );\n};\n\nconst UserCell = ({user, onClick}) => {\n  const [isHovering, setIsHovering] = useState(false);\n  const onMouseEnter = () => {\n    setIsHovering(true);\n  };\n\n  const onMouseLeave = () => {\n    setIsHovering(false);\n  };\n  const onContainerClick = () => {\n    onClick();\n  };\n\n  return (\n    <Card  className={`submission-container ${ isHovering ? ' shadow-lg' : 'shadow '  }${'CourseSubmittedHomeWork'} m-4  `}  onMouseEnter={onMouseEnter}  onMouseLeave={onMouseLeave} >\n      <Card.Header as=\"h5\">User ID: {user.id}</Card.Header>\n      <Card.Body>\n        <Card.Title>Name: {`${user.fname} ${user.lname}`}</Card.Title>\n        <Card.Text>\n            Type: {user.type}\n        </Card.Text>\n      </Card.Body>\n        <Button className=\"remove\" variant=\"outline-danger\"  onClick={onContainerClick}> <BsTrash/></Button>\n    </Card>\n    \n  );\n};\n","C:\\Users\\123\\Desktop\\semster 8\\WEB\\final\\updated_project- elias-reham\\201277811_318292604\\Client\\src\\API\\API.js",[],"C:\\Users\\123\\Desktop\\semster 8\\WEB\\final\\updated_project- elias-reham\\201277811_318292604\\Client\\src\\Util\\TimeUtil.js",[],"C:\\Users\\123\\Desktop\\semster 8\\WEB\\final\\updated_project- elias-reham\\201277811_318292604\\Client\\src\\components\\DateTimePicker.jsx",["245"],"import React, {useState} from 'react';\nimport 'date-fns';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nexport default function DateTimePicker({onChange, value}) {\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <Grid container justify=\"space-around\">\n        <KeyboardDatePicker\n          margin=\"normal\"\n          id=\"date-picker-dialog\"\n          label=\"Date picker dialog\"\n          format=\"MM/dd/yyyy\"\n          value={value}\n          onChange={onChange}\n          KeyboardButtonProps={{\n            'aria-label': 'change date',\n          }}\n        />\n        <KeyboardTimePicker\n          margin=\"normal\"\n          id=\"time-picker\"\n          label=\"Time picker\"\n          value={value}\n          onChange={onChange}\n          KeyboardButtonProps={{\n            'aria-label': 'change time',\n          }}\n        />\n      </Grid>\n    </MuiPickersUtilsProvider>\n  );\n}\n","C:\\Users\\123\\Desktop\\semster 8\\WEB\\final\\updated_project- elias-reham\\201277811_318292604\\Client\\src\\components\\TemporaryAlert.jsx",["246"],"import React, {\n  useEffect,\n  useState,\n  forwardRef,\n  useImperativeHandle,\n} from 'react';\nimport {Alert} from 'react-bootstrap';\nvar timeout = null;\nconst TemporaryAlert = (\n  {body, heading, type = 'success', showTime = 5000},\n  ref\n) => {\n  const [show, setShow] = useState(false);\n \n  useImperativeHandle(ref, () => ({\n    showAlert: () => {\n      setShow(true);\n      clearTimeout(timeout)\n      timeout = setTimeout(() => {\n        closeAlert();\n      }, showTime);\n    },\n  }));\n\n  const closeAlert = () => {\n    setShow(false);\n  };\n  return (\n    <>\n      {show && (\n        <Alert variant={type} onClose={closeAlert} dismissible>\n          <Alert.Heading>{heading}</Alert.Heading>\n          <p>{body}</p>\n        </Alert>\n      )}\n    </>\n  );\n};\nexport default forwardRef(TemporaryAlert);\n","C:\\Users\\123\\Desktop\\semster 8\\WEB\\final\\updated_project- elias-reham\\201277811_318292604\\Client\\src\\components\\ColorfulSelect.jsx",["247"],"import React from 'react';\nimport Select from 'react-select';\nimport makeAnimated from 'react-select/animated';\nimport chroma from 'chroma-js';\n\nconst animatedComponents = makeAnimated();\nconst dot = (color = '#ccc') => ({\n  alignItems: 'center',\n  display: 'flex',\n\n  ':before': {\n    backgroundColor: color,\n    borderRadius: 10,\n    content: '\" \"',\n    display: 'block',\n    marginRight: 8,\n    height: 10,\n    width: 10,\n  },\n});\n\nconst colourStyles = {\n    control: styles => ({ ...styles, backgroundColor: 'white' }),\n    option: (styles, { data, isDisabled, isFocused, isSelected }) => {\n      const color = chroma(data.color);\n      return {\n        ...styles,\n        backgroundColor: isDisabled\n          ? null\n          : isSelected\n          ? data.color\n          : isFocused\n          ? color.alpha(0.1).css()\n          : null,\n        color: isDisabled\n          ? '#ccc'\n          : isSelected\n          ? chroma.contrast(color, 'white') > 2\n            ? 'white'\n            : 'black'\n          : data.color,\n        cursor: isDisabled ? 'not-allowed' : 'default',\n  \n        ':active': {\n          ...styles[':active'],\n          backgroundColor:\n            !isDisabled && (isSelected ? data.color : color.alpha(0.3).css()),\n        },\n      };\n    },\n    multiValue: (styles, { data }) => {\n      const color = chroma(data.color);\n      return {\n        ...styles,\n        backgroundColor: color.alpha(0.1).css(),\n      };\n    },\n    multiValueLabel: (styles, { data }) => ({\n      ...styles,\n      color: data.color,\n    }),\n    multiValueRemove: (styles, { data }) => ({\n      ...styles,\n      color: data.color,\n      ':hover': {\n        backgroundColor: data.color,\n        color: 'white',\n      },\n    }),\n  };\n\nexport default function ColorfulSelect({options, initialOptions, onChange}) {\n    return (\n    <>\n      <Select\n        closeMenuOnSelect={false}\n        components={animatedComponents}\n        isMulti\n        onChange={onChange}\n        options={[...options, ...initialOptions]}\n        defaultValue={initialOptions}\n        styles={colourStyles}\n      />\n    </>\n  );\n}\n","C:\\Users\\123\\Desktop\\semster 8\\WEB\\final\\updated_project- elias-reham\\201277811_318292604\\Client\\src\\components\\CourseCell.jsx",["248"],"import React, {useState} from 'react';\nimport {Container, Row} from 'react-bootstrap';\nimport { useDispatch } from \"react-redux\";\n\nexport default function CourseCell({course, onClick}) {\n  const [isHovering, setIsHovering] = useState(false);\n  const dispatch = useDispatch();\n\n  const onMouseEnter = () => {\n    setIsHovering(true);\n  };\n\n  const onMouseLeave = () => {\n    setIsHovering(false);\n  };\n\n  const onContainerClick = () => {\n    onClick();\n  };\n\n  return (\n\n    <Container \n      onMouseEnter={onMouseEnter}\n      onMouseLeave={onMouseLeave}\n      onClick={onContainerClick}\n      className={`course-cell Container ${\n        isHovering ? ' shadow-lg' : 'shadow '\n      } p-4 mb-5 bg-white rounded `}\n    >\n      {course && (\n        <>\n          <Row className=\"course-title\">{course[0].title}</Row>\n          <TeachersNames teachers={course} />\n        </>\n      )}\n    </Container>\n\n  );\n}\n\nconst TeachersNames = ({teachers}) => {\n  return (\n    <>\n      <p>Teachers:</p>\n      <div className=\"course-teachers-names\">\n        {teachers.map((tch, i) => (\n          <TeacherName key={i} teacher={tch} />\n          \n        ))}\n      </div>\n    </>\n  );\n};\n\nconst TeacherName = ({teacher}) => {\n  return (\n    <div className=\"teacher-name-clickable\">{`${teacher.fname} ${teacher.lname}`}</div>\n  );\n};\n","C:\\Users\\123\\Desktop\\semster 8\\WEB\\final\\updated_project- elias-reham\\201277811_318292604\\Client\\src\\components\\CourseTeacherHomeWorkCell.jsx",["249","250","251","252"],"import React, { useState } from \"react\";\nimport { Container, Row } from \"react-bootstrap\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\n\nexport default function CourseTeacherHomeWorkCell({ id,Title, DeadLine,onClick }) {\n\n  const [isHovering, setIsHovering] = useState(false);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const onMouseEnter = () => {\n    setIsHovering(true);\n  };\n\n  const onMouseLeave = () => {\n    setIsHovering(false);\n  };\n  const onContainerClick = () => {\n    \n    \n    onClick()\n  };\n  \n      return (\n\n        <Container\n          onMouseEnter={onMouseEnter}\n          onMouseLeave={onMouseLeave}\n          onClick={onContainerClick}\n          className={`Container ${\n            isHovering ? \" shadow-lg\" : \"shadow \"\n          } p-4 mb-5 rounded `}\n          \n        >\n          <Row>{Title}</Row>\n          <Row>DeadLine: {DeadLine}</Row>\n        </Container>\n      );\n}\n","C:\\Users\\123\\Desktop\\semster 8\\WEB\\final\\updated_project- elias-reham\\201277811_318292604\\Client\\src\\components\\CourseStudentHomeWorkCell.jsx",["253","254","255","256","257"],"import React, { useState } from \"react\";\nimport { Container, Row } from \"react-bootstrap\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\n\nexport default function CourseStudentHomeWorkCell({ id,Title, DeadLine, Status,onClick }) {\n\n  const [isHovering, setIsHovering] = useState(false);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const onMouseEnter = () => {\n    setIsHovering(true);\n  };\n\n  const onMouseLeave = () => {\n    setIsHovering(false);\n  };\n  const onContainerClick = () => {\n    \n    \n    onClick()\n  };\n  return (\n\n    <Container\n      onMouseEnter={onMouseEnter}\n      onMouseLeave={onMouseLeave}\n      onClick={onContainerClick}\n      className={`Container ${\n        isHovering ? \" shadow-lg\" : \"shadow \"\n      }${\n        Status==\"Submitted\" ? \"CourseSubmittedHomeWork\" : \"CourseNotSubmittedHomeWork\"\n      } p-4 mb-5 rounded `}\n      \n    >\n      <Row>{Title}</Row>\n      <Row>DeadLine: {DeadLine}</Row>\n      <Row>Status: {Status}</Row>\n    </Container>\n  );\n    \n}\n","C:\\Users\\123\\Desktop\\semster 8\\WEB\\final\\updated_project- elias-reham\\201277811_318292604\\Client\\src\\components\\EditableParagraph.jsx",["258","259","260","261","262"],"import React, {useEffect, useRef, useState} from 'react';\nimport {FormControl} from 'react-bootstrap';\nimport {MdEdit, MdCheck} from 'react-icons/md';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Button from 'react-bootstrap/Button';\n\nexport default function EditableParagraph({\n  value,\n  headingClass,\n  onEditSuccess = () => {},\n  extraText,\n}) {\n  const [isEditing, setIsEditing] = useState(false);\n  const [text, setText] = useState();\n\n  useEffect(() => {\n    setText(value);\n  }, [value]);\n\n  const onChange = (e) => {\n    setText(e.target.value);\n  };\n  const onEditClick = () => {\n    setIsEditing(true);\n  };\n  const onCheckClick = () => {\n    setIsEditing(false);\n\n    onEditSuccess(text);\n  };\n\n  return (\n    <>\n    <span className=\"input-edit-course-page\"> {extraText} </span>\n    <InputGroup className=\"mb-3\">\n    \n      <FormControl\n        placeholder={extraText}\n        aria-describedby=\"basic-addon2\"\n        disabled = {isEditing ? false : true }\n        type=\"text\" onChange={onChange} value={text}\n      />\n      <InputGroup.Append>\n        <Button variant=\"outline-secondary\"   onClick={ isEditing ? onCheckClick: onEditClick } >\n        { isEditing ? <MdCheck />: <MdEdit/> } \n          {/* Edit */}\n        </Button>\n      </InputGroup.Append>\n    </InputGroup>\n    \n    </>\n  );\n}\n\n\n// {isEditing ? (\n//   <div className=\"d-flex pb-4 \">\n//     <MdCheck\n//       className=\"editIcon\"\n//       onClick={onCheckClick}\n//       color=\"#0e7bf1\"\n//       size=\"25px\"\n//     />{' '}\n    {/* <Form.Text type=\"text\" onChange={onChange} value={text} /> */}\n    {/* <Form.Control type=\"text\" /> \n    <Form.Text className=\"text-muted\" type=\"text\" onChange={onChange} value={text}>\n    </Form.Text> */}\n    {/* <FormControl type=\"text\" onChange={onChange} value={text} /> */}\n  {/* </div>\n) : (\n  <>\n  <MdEdit\n      className=\"editIcon\"\n      size=\"25px\"\n      onClick={onEditClick}\n      color=\"#0e7bf1\"\n    />\n    <p className={`d-flex pb-4 ${headingClass}`}>\n    {' '}           {extraText}\n\n    <Form.Control type=\"text\" />\n    <Form.Text className=\"text-muted\" type=\"text\" onChange={onChange} value={value}>\n    {value}\n    </Form.Text>\n    \n  </p>\n  </>\n\n)} */}","C:\\Users\\123\\Desktop\\semster 8\\WEB\\final\\updated_project- elias-reham\\201277811_318292604\\Client\\src\\components\\EditableDateTime.jsx",["263","264","265","266","267","268","269","270","271","272","273","274","275","276"],"import React, {useEffect, useRef, useState} from 'react';\nimport {FormControl} from 'react-bootstrap';\nimport {MdEdit, MdCheck} from 'react-icons/md';\nimport {toDateTimeString} from '../Util/TimeUtil';\nimport DateTimePicker from './DateTimePicker';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Button from 'react-bootstrap/Button';\nexport default function EditableTimeDate({\n  value,\n  headingClass,\n  onEditSuccess = () => {},\n  extraText,\n}) {\n  const [isEditing, setIsEditing] = useState(false);\n  const [text, setText] = useState();\n  const [deadline, setDeadline] = useState(value);\n\n  useEffect(() => {\n    setDeadline(value);\n  }, [value]);\n\n  const onEditClick = () => {\n    setIsEditing(true);\n  };\n  const onCheckClick = () => {\n    setIsEditing(false);\n    onEditSuccess(deadline);\n  };\n  const handleDateChange = (date) => {\n    try {\n      setDeadline(date.toISOString());\n    } catch (error) {}\n  };\n  return (\n    <>\n    <span className=\"input-edit-course-page\"> {extraText} </span>\n    {/* <InputGroup className=\"mb-3 date-submition-style\">\n      <InputGroup.Append>\n        { isEditing \n        ? \n            <DateTimePicker\n              onChange={handleDateChange}\n              value={new Date(deadline)}\n            />\n        : \n          <p className={`d-flex pb-4 ${headingClass}`}>\n          {toDateTimeString(deadline)}\n        </p> }\n\n        <Button variant=\"outline-secondary\"   onClick={ isEditing ? onCheckClick: onEditClick } >\n          { isEditing \n          ?<MdCheck />\n          : <MdEdit/>} \n        </Button>\n      </InputGroup.Append>\n    </InputGroup> */}\n    </>\n  );\n}\n","C:\\Users\\123\\Desktop\\semster 8\\WEB\\final\\updated_project- elias-reham\\201277811_318292604\\Client\\src\\components\\SubmissionCell.jsx",[],"C:\\Users\\123\\Desktop\\semster 8\\WEB\\final\\updated_project- elias-reham\\201277811_318292604\\Client\\src\\components\\SpecificHomeWorkCell.jsx",["277","278","279","280","281","282","283"],"import React, {useState} from 'react';\nimport {Container, Row} from 'react-bootstrap';\nimport Col from 'react-bootstrap/Col';\nimport {toDateString} from '../Util/TimeUtil';\nimport Comment from './Comment';\nimport Button from 'react-bootstrap/Button';\nimport {useHistory} from 'react-router-dom';\n\nexport default function SpecificHomeWorkCell({\n  id,\n  SubmissionId,\n  name,\n  deadline,\n  submitteddate,\n  homeworkfile,\n  Status,\n  Grade,\n  allcommentssorted,\n}) {\n  const [isHovering, setIsHovering] = useState(false);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [fileNames, setFileNames] = useState([]);\n  const history = useHistory();\n\n  const handleDrop = (acceptedFiles) =>\n    setFileNames(acceptedFiles.map((file) => file.name));\n  const onMouseEnter = () => {\n    setIsHovering(true);\n  };\n  const [comment, setcomment] = useState('');\n\n  const onMouseLeave = () => {\n    setIsHovering(false);\n  };\n  const handleComment = (g) => {\n    setcomment(g.target.value);\n  };\n  const onContainerClick = () => {\n    // onClick()\n  };\n  const onClickSave = () => {\n    history.push('/HomeworksTeacherView');\n    //dispatch(setCurrentHomeworkStudent(HomeWork))\n  };\n  const onClickcCancel = () => {\n    history.push('/HomeworksTeacherView');\n    //dispatch(setCurrentHomeworkStudent(HomeWork))\n  };\n  return (\n    <Container\n      onMouseEnter={onMouseEnter}\n      onMouseLeave={onMouseLeave}\n      //  onClick={onContainerClick}\n      className=\" shadow-lg\"\n    >\n      <Row>\n        <Col className=\"HomeWorkContent\">Status:</Col>\n        <Col className=\"HomeWorkContent\">{Status}</Col>\n      </Row>\n      <Row>\n        <Col className=\"HomeWorkContent2\">Grade:</Col>\n        <Col className=\"HomeWorkContent2\">{Grade}</Col>{' '}\n      </Row>\n      <Row>\n        <Col className=\"HomeWorkContent\">DeadLine:</Col>\n        <Col className=\"HomeWorkContent\">{deadline}</Col>{' '}\n      </Row>\n      <Row>\n        <Col className=\"HomeWorkContent2\">TimeLeft:</Col>\n        <Col className=\"HomeWorkContent2\">11 Days</Col>{' '}\n      </Row>\n      <Row>\n        <Col className=\"HomeWorkContent\">Comments:</Col>\n        <Col>\n          {allcommentssorted.map((comment, i) => {\n            return <Comment key={i} comment={comment} />;\n          })}\n        </Col>\n      </Row>\n      <Row className=\"HomeWorkContent\">\n        <Col>\n          <Row>\n            <Button onClick={() => onClickcCancel()}>Cancel</Button>\n          </Row>\n          <Row>\n            {' '}\n            <Button onClick={() => onClickSave()}>Save</Button>\n          </Row>\n        </Col>\n        <Col>\n          <textarea\n            className=\"Comment-style\"\n            value={comment}\n            onChange={handleComment}\n          ></textarea>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","C:\\Users\\123\\Desktop\\semster 8\\WEB\\final\\updated_project- elias-reham\\201277811_318292604\\Client\\src\\components\\CustomerDialog.jsx",[],"C:\\Users\\123\\Desktop\\semster 8\\WEB\\final\\updated_project- elias-reham\\201277811_318292604\\Client\\src\\components\\EditableNumber.jsx",["284"],"import React, {useEffect, useRef, useState} from 'react';\nimport {FormControl} from 'react-bootstrap';\nimport {MdEdit, MdCheck} from 'react-icons/md';\n\nexport default function EditableNumber({\n  value,\n  headingClass,\n  onEditSuccess = () => {},\n}) {\n  const [isEditing, setIsEditing] = useState(false);\n  const [text, setText] = useState();\n\n  useEffect(() => {\n    setText(value);\n  }, [value]);\n\n  const onChange = (e) => {\n    setText(e.target.value);\n  };\n  const onEditClick = () => {\n    setIsEditing(true);\n  };\n  const onCheckClick = () => {\n    setIsEditing(false);\n\n    onEditSuccess(text);\n  };\n\n  return (\n    <>\n      {isEditing ? (\n        <div className=\"d-flex\">\n          <MdCheck\n            className=\"editIcon\"\n            onClick={onCheckClick}\n            color=\"#0e7bf1\"\n            size=\"2em\"\n          />{' '}\n          <FormControl\n            type=\"number\"\n            min=\"0\"\n            max=\"100\"\n            onChange={onChange}\n            value={text}\n          />\n        </div>\n      ) : (\n        <p className={`d-flex ${headingClass}`}>\n          <MdEdit\n            className=\"editIcon\"\n            size=\"1.3em\"\n            onClick={onEditClick}\n            color=\"#0e7bf1\"\n          />{' '}\n          {value}\n        </p>\n      )}\n    </>\n  );\n}\n","C:\\Users\\123\\Desktop\\semster 8\\WEB\\final\\updated_project- elias-reham\\201277811_318292604\\Client\\src\\components\\Comment.jsx",["285"],"import React from \"react\";\nimport {Row, Col} from \"react-bootstrap\";\nimport { timeFromDateISO, toDateString } from \"../Util/TimeUtil\";\nconst Comment = ({comment}) => {\n  return (\n    <>\n      <Row >\n        <Col>{comment.content}</Col>\n        <Col>{comment.authorFullName}</Col>\n        <Col>{timeFromDateISO(comment.createdAt)}</Col>\n      </Row>\n    </>\n  );\n};\n\nexport default Comment;\n",{"ruleId":"286","severity":1,"message":"287","line":8,"column":8,"nodeType":"288","messageId":"289","endLine":8,"endColumn":18},{"ruleId":"286","severity":1,"message":"290","line":10,"column":8,"nodeType":"288","messageId":"289","endLine":10,"endColumn":17},{"ruleId":"286","severity":1,"message":"291","line":12,"column":8,"nodeType":"288","messageId":"289","endLine":12,"endColumn":23},{"ruleId":"292","replacedBy":"293"},{"ruleId":"294","replacedBy":"295"},{"ruleId":"286","severity":1,"message":"296","line":5,"column":9,"nodeType":"288","messageId":"289","endLine":5,"endColumn":20},{"ruleId":"286","severity":1,"message":"297","line":20,"column":22,"nodeType":"288","messageId":"289","endLine":20,"endColumn":33},{"ruleId":"286","severity":1,"message":"298","line":33,"column":9,"nodeType":"288","messageId":"289","endLine":33,"endColumn":14},{"ruleId":"286","severity":1,"message":"299","line":3,"column":3,"nodeType":"288","messageId":"289","endLine":3,"endColumn":15},{"ruleId":"286","severity":1,"message":"300","line":13,"column":9,"nodeType":"288","messageId":"289","endLine":13,"endColumn":20},{"ruleId":"301","severity":1,"message":"302","line":27,"column":6,"nodeType":"303","endLine":27,"endColumn":22,"suggestions":"304"},{"ruleId":"305","severity":1,"message":"306","line":89,"column":19,"nodeType":"307","endLine":94,"endColumn":20},{"ruleId":"305","severity":1,"message":"306","line":100,"column":21,"nodeType":"307","endLine":103,"endColumn":22},{"ruleId":"308","severity":1,"message":"309","line":30,"column":1,"nodeType":"310","messageId":"311","endLine":41,"endColumn":48},{"ruleId":"308","severity":1,"message":"309","line":42,"column":7,"nodeType":"310","messageId":"311","endLine":42,"endColumn":19},{"ruleId":"308","severity":1,"message":"309","line":43,"column":5,"nodeType":"310","messageId":"311","endLine":45,"endColumn":18},{"ruleId":"286","severity":1,"message":"312","line":3,"column":9,"nodeType":"288","messageId":"289","endLine":3,"endColumn":13},{"ruleId":"286","severity":1,"message":"313","line":3,"column":15,"nodeType":"288","messageId":"289","endLine":3,"endColumn":25},{"ruleId":"301","severity":1,"message":"314","line":16,"column":6,"nodeType":"303","endLine":16,"endColumn":8,"suggestions":"315"},{"ruleId":"316","severity":1,"message":"317","line":63,"column":26,"nodeType":"318","messageId":"319","endLine":63,"endColumn":28},{"ruleId":"316","severity":1,"message":"317","line":82,"column":25,"nodeType":"318","messageId":"319","endLine":82,"endColumn":27},{"ruleId":"316","severity":1,"message":"317","line":84,"column":21,"nodeType":"318","messageId":"319","endLine":84,"endColumn":23},{"ruleId":"286","severity":1,"message":"320","line":2,"column":9,"nodeType":"288","messageId":"289","endLine":2,"endColumn":18},{"ruleId":"286","severity":1,"message":"321","line":2,"column":34,"nodeType":"288","messageId":"289","endLine":2,"endColumn":39},{"ruleId":"316","severity":1,"message":"317","line":25,"column":27,"nodeType":"318","messageId":"319","endLine":25,"endColumn":29},{"ruleId":"316","severity":1,"message":"317","line":35,"column":27,"nodeType":"318","messageId":"319","endLine":35,"endColumn":29},{"ruleId":"301","severity":1,"message":"322","line":50,"column":6,"nodeType":"303","endLine":50,"endColumn":8,"suggestions":"323"},{"ruleId":"316","severity":1,"message":"317","line":98,"column":29,"nodeType":"318","messageId":"319","endLine":98,"endColumn":31},{"ruleId":"316","severity":1,"message":"317","line":100,"column":25,"nodeType":"318","messageId":"319","endLine":100,"endColumn":27},{"ruleId":"301","severity":1,"message":"314","line":35,"column":6,"nodeType":"303","endLine":35,"endColumn":8,"suggestions":"324"},{"ruleId":"286","severity":1,"message":"320","line":2,"column":8,"nodeType":"288","messageId":"289","endLine":2,"endColumn":17},{"ruleId":"286","severity":1,"message":"325","line":20,"column":7,"nodeType":"288","messageId":"289","endLine":20,"endColumn":12},{"ruleId":"301","severity":1,"message":"314","line":57,"column":6,"nodeType":"303","endLine":57,"endColumn":12,"suggestions":"326"},{"ruleId":"286","severity":1,"message":"327","line":1,"column":27,"nodeType":"288","messageId":"289","endLine":1,"endColumn":33},{"ruleId":"286","severity":1,"message":"320","line":2,"column":8,"nodeType":"288","messageId":"289","endLine":2,"endColumn":17},{"ruleId":"286","severity":1,"message":"328","line":5,"column":8,"nodeType":"288","messageId":"289","endLine":5,"endColumn":12},{"ruleId":"286","severity":1,"message":"329","line":14,"column":3,"nodeType":"288","messageId":"289","endLine":14,"endColumn":28},{"ruleId":"286","severity":1,"message":"330","line":35,"column":9,"nodeType":"288","messageId":"289","endLine":35,"endColumn":15},{"ruleId":"286","severity":1,"message":"331","line":35,"column":17,"nodeType":"288","messageId":"289","endLine":35,"endColumn":24},{"ruleId":"286","severity":1,"message":"332","line":36,"column":17,"nodeType":"288","messageId":"289","endLine":36,"endColumn":28},{"ruleId":"301","severity":1,"message":"333","line":73,"column":6,"nodeType":"303","endLine":73,"endColumn":8,"suggestions":"334"},{"ruleId":"301","severity":1,"message":"314","line":83,"column":6,"nodeType":"303","endLine":83,"endColumn":8,"suggestions":"335"},{"ruleId":"316","severity":1,"message":"317","line":145,"column":30,"nodeType":"318","messageId":"319","endLine":145,"endColumn":32},{"ruleId":"316","severity":1,"message":"317","line":157,"column":30,"nodeType":"318","messageId":"319","endLine":157,"endColumn":32},{"ruleId":"316","severity":1,"message":"317","line":174,"column":38,"nodeType":"318","messageId":"319","endLine":174,"endColumn":40},{"ruleId":"316","severity":1,"message":"317","line":175,"column":38,"nodeType":"318","messageId":"319","endLine":175,"endColumn":40},{"ruleId":"316","severity":1,"message":"317","line":181,"column":22,"nodeType":"318","messageId":"319","endLine":181,"endColumn":24},{"ruleId":"316","severity":1,"message":"317","line":193,"column":22,"nodeType":"318","messageId":"319","endLine":193,"endColumn":24},{"ruleId":"316","severity":1,"message":"317","line":193,"column":68,"nodeType":"318","messageId":"319","endLine":193,"endColumn":70},{"ruleId":"316","severity":1,"message":"317","line":196,"column":22,"nodeType":"318","messageId":"319","endLine":196,"endColumn":24},{"ruleId":"316","severity":1,"message":"317","line":210,"column":22,"nodeType":"318","messageId":"319","endLine":210,"endColumn":24},{"ruleId":"316","severity":1,"message":"317","line":210,"column":68,"nodeType":"318","messageId":"319","endLine":210,"endColumn":70},{"ruleId":"316","severity":1,"message":"317","line":213,"column":22,"nodeType":"318","messageId":"319","endLine":213,"endColumn":24},{"ruleId":"286","severity":1,"message":"327","line":1,"column":27,"nodeType":"288","messageId":"289","endLine":1,"endColumn":33},{"ruleId":"286","severity":1,"message":"320","line":23,"column":8,"nodeType":"288","messageId":"289","endLine":23,"endColumn":17},{"ruleId":"286","severity":1,"message":"336","line":31,"column":8,"nodeType":"288","messageId":"289","endLine":31,"endColumn":22},{"ruleId":"286","severity":1,"message":"337","line":41,"column":10,"nodeType":"288","messageId":"289","endLine":41,"endColumn":18},{"ruleId":"301","severity":1,"message":"338","line":48,"column":6,"nodeType":"303","endLine":48,"endColumn":8,"suggestions":"339"},{"ruleId":"301","severity":1,"message":"314","line":54,"column":6,"nodeType":"303","endLine":54,"endColumn":8,"suggestions":"340"},{"ruleId":"286","severity":1,"message":"320","line":9,"column":8,"nodeType":"288","messageId":"289","endLine":9,"endColumn":17},{"ruleId":"286","severity":1,"message":"341","line":16,"column":9,"nodeType":"288","messageId":"289","endLine":16,"endColumn":19},{"ruleId":"286","severity":1,"message":"342","line":17,"column":21,"nodeType":"288","messageId":"289","endLine":17,"endColumn":41},{"ruleId":"301","severity":1,"message":"314","line":27,"column":6,"nodeType":"303","endLine":27,"endColumn":8,"suggestions":"343"},{"ruleId":"286","severity":1,"message":"297","line":3,"column":22,"nodeType":"288","messageId":"289","endLine":3,"endColumn":33},{"ruleId":"286","severity":1,"message":"320","line":4,"column":8,"nodeType":"288","messageId":"289","endLine":4,"endColumn":17},{"ruleId":"301","severity":1,"message":"344","line":19,"column":6,"nodeType":"303","endLine":19,"endColumn":8,"suggestions":"345"},{"ruleId":"346","severity":1,"message":"347","line":106,"column":11,"nodeType":"348","messageId":"349","endLine":106,"endColumn":33},{"ruleId":"286","severity":1,"message":"320","line":2,"column":8,"nodeType":"288","messageId":"289","endLine":2,"endColumn":17},{"ruleId":"286","severity":1,"message":"350","line":3,"column":8,"nodeType":"288","messageId":"289","endLine":3,"endColumn":11},{"ruleId":"286","severity":1,"message":"351","line":8,"column":3,"nodeType":"288","messageId":"289","endLine":8,"endColumn":19},{"ruleId":"286","severity":1,"message":"352","line":12,"column":3,"nodeType":"288","messageId":"289","endLine":12,"endColumn":24},{"ruleId":"286","severity":1,"message":"353","line":23,"column":3,"nodeType":"288","messageId":"289","endLine":23,"endColumn":17},{"ruleId":"286","severity":1,"message":"325","line":40,"column":7,"nodeType":"288","messageId":"289","endLine":40,"endColumn":12},{"ruleId":"286","severity":1,"message":"354","line":45,"column":10,"nodeType":"288","messageId":"289","endLine":45,"endColumn":19},{"ruleId":"286","severity":1,"message":"355","line":45,"column":21,"nodeType":"288","messageId":"289","endLine":45,"endColumn":33},{"ruleId":"301","severity":1,"message":"314","line":72,"column":6,"nodeType":"303","endLine":72,"endColumn":12,"suggestions":"356"},{"ruleId":"286","severity":1,"message":"357","line":74,"column":9,"nodeType":"288","messageId":"289","endLine":74,"endColumn":27},{"ruleId":"286","severity":1,"message":"358","line":131,"column":9,"nodeType":"288","messageId":"289","endLine":131,"endColumn":33},{"ruleId":"316","severity":1,"message":"317","line":208,"column":18,"nodeType":"318","messageId":"319","endLine":208,"endColumn":20},{"ruleId":"316","severity":1,"message":"317","line":223,"column":26,"nodeType":"318","messageId":"319","endLine":223,"endColumn":28},{"ruleId":"316","severity":1,"message":"317","line":246,"column":20,"nodeType":"318","messageId":"319","endLine":246,"endColumn":22},{"ruleId":"316","severity":1,"message":"317","line":248,"column":24,"nodeType":"318","messageId":"319","endLine":248,"endColumn":26},{"ruleId":"316","severity":1,"message":"317","line":263,"column":20,"nodeType":"318","messageId":"319","endLine":263,"endColumn":22},{"ruleId":"316","severity":1,"message":"317","line":265,"column":24,"nodeType":"318","messageId":"319","endLine":265,"endColumn":26},{"ruleId":"316","severity":1,"message":"317","line":277,"column":20,"nodeType":"318","messageId":"319","endLine":277,"endColumn":22},{"ruleId":"316","severity":1,"message":"317","line":280,"column":20,"nodeType":"318","messageId":"319","endLine":280,"endColumn":22},{"ruleId":"316","severity":1,"message":"317","line":285,"column":33,"nodeType":"318","messageId":"319","endLine":285,"endColumn":35},{"ruleId":"316","severity":1,"message":"317","line":288,"column":33,"nodeType":"318","messageId":"319","endLine":288,"endColumn":35},{"ruleId":"286","severity":1,"message":"359","line":1,"column":16,"nodeType":"288","messageId":"289","endLine":1,"endColumn":24},{"ruleId":"286","severity":1,"message":"360","line":2,"column":3,"nodeType":"288","messageId":"289","endLine":2,"endColumn":12},{"ruleId":"286","severity":1,"message":"361","line":7,"column":7,"nodeType":"288","messageId":"289","endLine":7,"endColumn":10},{"ruleId":"286","severity":1,"message":"362","line":7,"column":9,"nodeType":"288","messageId":"289","endLine":7,"endColumn":17},{"ruleId":"286","severity":1,"message":"363","line":4,"column":10,"nodeType":"288","messageId":"289","endLine":4,"endColumn":21},{"ruleId":"286","severity":1,"message":"297","line":4,"column":23,"nodeType":"288","messageId":"289","endLine":4,"endColumn":34},{"ruleId":"286","severity":1,"message":"364","line":9,"column":10,"nodeType":"288","messageId":"289","endLine":9,"endColumn":21},{"ruleId":"286","severity":1,"message":"365","line":9,"column":23,"nodeType":"288","messageId":"289","endLine":9,"endColumn":37},{"ruleId":"286","severity":1,"message":"363","line":4,"column":10,"nodeType":"288","messageId":"289","endLine":4,"endColumn":21},{"ruleId":"286","severity":1,"message":"297","line":4,"column":23,"nodeType":"288","messageId":"289","endLine":4,"endColumn":34},{"ruleId":"286","severity":1,"message":"364","line":9,"column":10,"nodeType":"288","messageId":"289","endLine":9,"endColumn":21},{"ruleId":"286","severity":1,"message":"365","line":9,"column":23,"nodeType":"288","messageId":"289","endLine":9,"endColumn":37},{"ruleId":"316","severity":1,"message":"317","line":31,"column":15,"nodeType":"318","messageId":"319","endLine":31,"endColumn":17},{"ruleId":"286","severity":1,"message":"327","line":1,"column":27,"nodeType":"288","messageId":"289","endLine":1,"endColumn":33},{"ruleId":"308","severity":1,"message":"309","line":64,"column":5,"nodeType":"310","messageId":"311","endLine":64,"endColumn":71},{"ruleId":"308","severity":1,"message":"309","line":65,"column":5,"nodeType":"310","messageId":"311","endLine":67,"endColumn":21},{"ruleId":"308","severity":1,"message":"309","line":68,"column":5,"nodeType":"310","messageId":"311","endLine":68,"endColumn":73},{"ruleId":"308","severity":1,"message":"309","line":69,"column":3,"nodeType":"310","messageId":"311","endLine":89,"endColumn":7},{"ruleId":"286","severity":1,"message":"327","line":1,"column":27,"nodeType":"288","messageId":"289","endLine":1,"endColumn":33},{"ruleId":"286","severity":1,"message":"332","line":2,"column":9,"nodeType":"288","messageId":"289","endLine":2,"endColumn":20},{"ruleId":"286","severity":1,"message":"330","line":3,"column":9,"nodeType":"288","messageId":"289","endLine":3,"endColumn":15},{"ruleId":"286","severity":1,"message":"331","line":3,"column":17,"nodeType":"288","messageId":"289","endLine":3,"endColumn":24},{"ruleId":"286","severity":1,"message":"366","line":4,"column":9,"nodeType":"288","messageId":"289","endLine":4,"endColumn":25},{"ruleId":"286","severity":1,"message":"367","line":5,"column":8,"nodeType":"288","messageId":"289","endLine":5,"endColumn":22},{"ruleId":"286","severity":1,"message":"368","line":6,"column":8,"nodeType":"288","messageId":"289","endLine":6,"endColumn":18},{"ruleId":"286","severity":1,"message":"369","line":7,"column":8,"nodeType":"288","messageId":"289","endLine":7,"endColumn":14},{"ruleId":"286","severity":1,"message":"370","line":14,"column":10,"nodeType":"288","messageId":"289","endLine":14,"endColumn":19},{"ruleId":"286","severity":1,"message":"371","line":15,"column":10,"nodeType":"288","messageId":"289","endLine":15,"endColumn":14},{"ruleId":"286","severity":1,"message":"372","line":15,"column":16,"nodeType":"288","messageId":"289","endLine":15,"endColumn":23},{"ruleId":"286","severity":1,"message":"373","line":22,"column":9,"nodeType":"288","messageId":"289","endLine":22,"endColumn":20},{"ruleId":"286","severity":1,"message":"374","line":25,"column":9,"nodeType":"288","messageId":"289","endLine":25,"endColumn":21},{"ruleId":"286","severity":1,"message":"375","line":29,"column":9,"nodeType":"288","messageId":"289","endLine":29,"endColumn":25},{"ruleId":"286","severity":1,"message":"376","line":4,"column":9,"nodeType":"288","messageId":"289","endLine":4,"endColumn":21},{"ruleId":"286","severity":1,"message":"377","line":20,"column":10,"nodeType":"288","messageId":"289","endLine":20,"endColumn":20},{"ruleId":"286","severity":1,"message":"364","line":21,"column":10,"nodeType":"288","messageId":"289","endLine":21,"endColumn":21},{"ruleId":"286","severity":1,"message":"365","line":21,"column":23,"nodeType":"288","messageId":"289","endLine":21,"endColumn":37},{"ruleId":"286","severity":1,"message":"378","line":22,"column":10,"nodeType":"288","messageId":"289","endLine":22,"endColumn":19},{"ruleId":"286","severity":1,"message":"379","line":25,"column":9,"nodeType":"288","messageId":"289","endLine":25,"endColumn":19},{"ruleId":"286","severity":1,"message":"380","line":38,"column":9,"nodeType":"288","messageId":"289","endLine":38,"endColumn":25},{"ruleId":"286","severity":1,"message":"327","line":1,"column":27,"nodeType":"288","messageId":"289","endLine":1,"endColumn":33},{"ruleId":"286","severity":1,"message":"376","line":3,"column":27,"nodeType":"288","messageId":"289","endLine":3,"endColumn":39},"no-unused-vars","'UploadFile' is defined but never used.","Identifier","unusedVar","'FilesList' is defined but never used.","'UploadDisplayer' is defined but never used.","no-native-reassign",["381"],"no-negated-in-lhs",["382"],"'useLocation' is defined but never used.","'useDispatch' is defined but never used.","'Login' is assigned a value but never used.","'persistStore' is defined but never used.","'PersistGate' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getFilesList'. Either include it or remove the dependency array.","ArrayExpression",["383"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'Icon' is defined but never used.","'InlineIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["384"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Container' is defined but never used.","'Alert' is defined but never used.","React Hook useEffect has a missing dependency: 'cid'. Either include it or remove the dependency array.",["385"],["386"],"'axios' is assigned a value but never used.",["387"],"'useRef' is defined but never used.","'Form' is defined but never used.","'setCurrentHomeworkStudent' is defined but never used.","'MdEdit' is defined but never used.","'MdCheck' is defined but never used.","'FormControl' is defined but never used.","React Hook useEffect has missing dependencies: 'course' and 'user.id'. Either include them or remove the dependency array.",["388"],["389"],"'CustomerDialog' is defined but never used.","'deadline' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'Homework.id'. Either include it or remove the dependency array.",["390"],["391"],"'student_hw' is assigned a value but never used.","'setSubmittedHomeWork' is assigned a value but never used.",["392"],"React Hook useEffect has a missing dependency: 'submission'. Either include it or remove the dependency array.",["393"],"react/style-prop-object","Style prop value must be an object","JSXAttribute","stylePropNotObject","'Row' is defined but never used.","'setCurrentCourse' is defined but never used.","'setCurrentCourseTitle' is defined but never used.","'getUserCourses' is defined but never used.","'isLoading' is assigned a value but never used.","'setIsLoading' is assigned a value but never used.",["394"],"'onAddCourseClicked' is assigned a value but never used.","'onHomeworkDeleteDeclined' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'dot' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'useSelector' is defined but never used.","'isSubmitted' is assigned a value but never used.","'setIsSubmitted' is assigned a value but never used.","'toDateTimeString' is defined but never used.","'DateTimePicker' is defined but never used.","'InputGroup' is defined but never used.","'Button' is defined but never used.","'isEditing' is assigned a value but never used.","'text' is assigned a value but never used.","'setText' is assigned a value but never used.","'onEditClick' is assigned a value but never used.","'onCheckClick' is assigned a value but never used.","'handleDateChange' is assigned a value but never used.","'toDateString' is defined but never used.","'isHovering' is assigned a value but never used.","'fileNames' is assigned a value but never used.","'handleDrop' is assigned a value but never used.","'onContainerClick' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"395","fix":"396"},{"desc":"397","fix":"398"},{"desc":"399","fix":"400"},{"desc":"397","fix":"401"},{"desc":"402","fix":"403"},{"desc":"404","fix":"405"},{"desc":"397","fix":"406"},{"desc":"407","fix":"408"},{"desc":"397","fix":"409"},{"desc":"397","fix":"410"},{"desc":"411","fix":"412"},{"desc":"402","fix":"413"},"Update the dependencies array to be: [fileUploadedAt, getFilesList]",{"range":"414","text":"415"},"Update the dependencies array to be: [dispatch]",{"range":"416","text":"417"},"Update the dependencies array to be: [cid]",{"range":"418","text":"419"},{"range":"420","text":"417"},"Update the dependencies array to be: [dispatch, user]",{"range":"421","text":"422"},"Update the dependencies array to be: [course, user.id]",{"range":"423","text":"424"},{"range":"425","text":"417"},"Update the dependencies array to be: [Homework.id]",{"range":"426","text":"427"},{"range":"428","text":"417"},{"range":"429","text":"417"},"Update the dependencies array to be: [submission]",{"range":"430","text":"431"},{"range":"432","text":"422"},[716,732],"[fileUploadedAt, getFilesList]",[601,603],"[dispatch]",[1486,1488],"[cid]",[1098,1100],[1602,1608],"[dispatch, user]",[2440,2442],"[course, user.id]",[2722,2724],[1540,1542],"[Homework.id]",[1697,1699],[823,825],[848,850],"[submission]",[1897,1903]]